{
  "version": 3,
  "sources": ["../src/overtype.js", "../src/parser.js", "../node_modules/markdown-actions/src/core/formats.js", "../node_modules/markdown-actions/src/debug.js", "../node_modules/markdown-actions/src/core/insertion.js", "../node_modules/markdown-actions/src/core/selection.js", "../node_modules/markdown-actions/src/operations/block.js", "../node_modules/markdown-actions/src/operations/list.js", "../node_modules/markdown-actions/src/core/detection.js", "../node_modules/markdown-actions/src/index.js", "../src/shortcuts.js", "../src/themes.js", "../src/styles.js", "../src/icons.js", "../src/toolbar.js", "../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../src/link-tooltip.js"],
  "sourcesContent": ["/**\n * OverType - A lightweight markdown editor library with perfect WYSIWYG alignment\n * @version 1.0.0\n * @license MIT\n */\n\nimport { MarkdownParser } from './parser.js';\nimport { ShortcutsManager } from './shortcuts.js';\nimport { generateStyles } from './styles.js';\nimport { getTheme, mergeTheme, solar, themeToCSSVars } from './themes.js';\nimport { Toolbar } from './toolbar.js';\nimport { LinkTooltip } from './link-tooltip.js';\n\n/**\n * OverType Editor Class\n */\nclass OverType {\n    // Static properties\n    static instances = new WeakMap();\n    static stylesInjected = false;\n    static globalListenersInitialized = false;\n    static instanceCount = 0;\n\n    /**\n     * Constructor - Always returns an array of instances\n     * @param {string|Element|NodeList|Array} target - Target element(s)\n     * @param {Object} options - Configuration options\n     * @returns {Array} Array of OverType instances\n     */\n    constructor(target, options = {}) {\n      // Convert target to array of elements\n      let elements;\n      \n      if (typeof target === 'string') {\n        elements = document.querySelectorAll(target);\n        if (elements.length === 0) {\n          throw new Error(`No elements found for selector: ${target}`);\n        }\n        elements = Array.from(elements);\n      } else if (target instanceof Element) {\n        elements = [target];\n      } else if (target instanceof NodeList) {\n        elements = Array.from(target);\n      } else if (Array.isArray(target)) {\n        elements = target;\n      } else {\n        throw new Error('Invalid target: must be selector string, Element, NodeList, or Array');\n      }\n\n      // Initialize all elements and return array\n      const instances = elements.map(element => {\n        // Check for existing instance\n        if (element.overTypeInstance) {\n          // Re-init existing instance\n          element.overTypeInstance.reinit(options);\n          return element.overTypeInstance;\n        }\n\n        // Create new instance\n        const instance = Object.create(OverType.prototype);\n        instance._init(element, options);\n        element.overTypeInstance = instance;\n        OverType.instances.set(element, instance);\n        return instance;\n      });\n\n      return instances;\n    }\n\n    /**\n     * Internal initialization\n     * @private\n     */\n    _init(element, options = {}) {\n      this.element = element;\n      \n      // Store the original theme option before merging\n      this.instanceTheme = options.theme || null;\n      \n      this.options = this._mergeOptions(options);\n      this.instanceId = ++OverType.instanceCount;\n      this.initialized = false;\n\n      // Inject styles if needed\n      OverType.injectStyles();\n\n      // Initialize global listeners\n      OverType.initGlobalListeners();\n\n      // Check for existing OverType DOM structure\n      const container = element.querySelector('.overtype-container');\n      const wrapper = element.querySelector('.overtype-wrapper');\n      if (container || wrapper) {\n        this._recoverFromDOM(container, wrapper);\n      } else {\n        this._buildFromScratch();\n      }\n\n      // Setup shortcuts manager\n      this.shortcuts = new ShortcutsManager(this);\n      \n      // Setup link tooltip\n      this.linkTooltip = new LinkTooltip(this);\n\n      // Setup toolbar if enabled\n      if (this.options.toolbar) {\n        this.toolbar = new Toolbar(this);\n        this.toolbar.create();\n        \n        // Update toolbar states on selection change\n        this.textarea.addEventListener('selectionchange', () => {\n          this.toolbar.updateButtonStates();\n        });\n        this.textarea.addEventListener('input', () => {\n          this.toolbar.updateButtonStates();\n        });\n      }\n\n      // Mark as initialized\n      this.initialized = true;\n\n      // Call onChange if provided\n      if (this.options.onChange) {\n        this.options.onChange(this.getValue(), this);\n      }\n    }\n\n    /**\n     * Merge user options with defaults\n     * @private\n     */\n    _mergeOptions(options) {\n      const defaults = {\n        // Typography\n        fontSize: '14px',\n        lineHeight: 1.6,\n        fontFamily: \"ui-monospace, 'SFMono-Regular', 'Menlo', 'Consolas', 'Liberation Mono', monospace\",\n        padding: '16px',\n        \n        // Mobile styles\n        mobile: {\n          fontSize: '16px',  // Prevent zoom on iOS\n          padding: '12px',\n          lineHeight: 1.5\n        },\n        \n        // Behavior\n        autofocus: false,\n        placeholder: 'Start typing...',\n        value: '',\n        \n        // Callbacks\n        onChange: null,\n        onKeydown: null,\n        \n        // Features\n        showActiveLineRaw: false,\n        showStats: false,\n        toolbar: false,\n        statsFormatter: null\n      };\n      \n      // Remove theme and colors from options - these are now global\n      const { theme, colors, ...cleanOptions } = options;\n      \n      return {\n        ...defaults,\n        ...cleanOptions\n      };\n    }\n\n    /**\n     * Recover from existing DOM structure\n     * @private\n     */\n    _recoverFromDOM(container, wrapper) {\n      // Handle old structure (wrapper only) or new structure (container + wrapper)\n      if (container && container.classList.contains('overtype-container')) {\n        this.container = container;\n        this.wrapper = container.querySelector('.overtype-wrapper');\n      } else if (wrapper) {\n        // Old structure - just wrapper, no container\n        this.wrapper = wrapper;\n        // Wrap it in a container for consistency\n        this.container = document.createElement('div');\n        this.container.className = 'overtype-container';\n        // Use instance theme if provided, otherwise use global theme\n        const themeToUse = this.instanceTheme || OverType.currentTheme || solar;\n        const themeName = typeof themeToUse === 'string' ? themeToUse : themeToUse.name;\n        if (themeName) {\n          this.container.setAttribute('data-theme', themeName);\n        }\n        \n        // If using instance theme, apply CSS variables to container\n        if (this.instanceTheme) {\n          const themeObj = typeof this.instanceTheme === 'string' ? getTheme(this.instanceTheme) : this.instanceTheme;\n          if (themeObj && themeObj.colors) {\n            const cssVars = themeToCSSVars(themeObj.colors);\n            this.container.style.cssText += cssVars;\n          }\n        }\n        wrapper.parentNode.insertBefore(this.container, wrapper);\n        this.container.appendChild(wrapper);\n      }\n      \n      if (!this.wrapper) {\n        // No valid structure found\n        if (container) container.remove();\n        if (wrapper) wrapper.remove();\n        this._buildFromScratch();\n        return;\n      }\n      \n      this.textarea = this.wrapper.querySelector('.overtype-input');\n      this.preview = this.wrapper.querySelector('.overtype-preview');\n\n      if (!this.textarea || !this.preview) {\n        // Partial DOM - clear and rebuild\n        this.container.remove();\n        this._buildFromScratch();\n        return;\n      }\n\n      // Store reference on wrapper\n      this.wrapper._instance = this;\n      \n      // Apply instance-specific styles via CSS custom properties\n      if (this.options.fontSize) {\n        this.wrapper.style.setProperty('--instance-font-size', this.options.fontSize);\n      }\n      if (this.options.lineHeight) {\n        this.wrapper.style.setProperty('--instance-line-height', String(this.options.lineHeight));\n      }\n      if (this.options.padding) {\n        this.wrapper.style.setProperty('--instance-padding', this.options.padding);\n      }\n\n      // Disable autofill, spellcheck, and extensions\n      this._configureTextarea();\n\n      // Apply any new options\n      this._applyOptions();\n    }\n\n    /**\n     * Build editor from scratch\n     * @private\n     */\n    _buildFromScratch() {\n      // Extract any existing content\n      const content = this._extractContent();\n\n      // Clear element\n      this.element.innerHTML = '';\n\n      // Create DOM structure\n      this._createDOM();\n\n      // Set initial content\n      if (content || this.options.value) {\n        this.setValue(content || this.options.value);\n      }\n\n      // Apply options\n      this._applyOptions();\n    }\n\n    /**\n     * Extract content from element\n     * @private\n     */\n    _extractContent() {\n      // Look for existing OverType textarea\n      const textarea = this.element.querySelector('.overtype-input');\n      if (textarea) return textarea.value;\n\n      // Use element's text content as fallback\n      return this.element.textContent || '';\n    }\n\n    /**\n     * Create DOM structure\n     * @private\n     */\n    _createDOM() {\n      // Create container that will hold toolbar and editor\n      this.container = document.createElement('div');\n      this.container.className = 'overtype-container';\n      \n      // Set theme on container - use instance theme if provided\n      const themeToUse = this.instanceTheme || OverType.currentTheme || solar;\n      const themeName = typeof themeToUse === 'string' ? themeToUse : themeToUse.name;\n      if (themeName) {\n        this.container.setAttribute('data-theme', themeName);\n      }\n      \n      // If using instance theme, apply CSS variables to container\n      if (this.instanceTheme) {\n        const themeObj = typeof this.instanceTheme === 'string' ? getTheme(this.instanceTheme) : this.instanceTheme;\n        if (themeObj && themeObj.colors) {\n          const cssVars = themeToCSSVars(themeObj.colors);\n          this.container.style.cssText += cssVars;\n        }\n      }\n      \n      // Create wrapper for editor\n      this.wrapper = document.createElement('div');\n      this.wrapper.className = 'overtype-wrapper';\n      \n      // Add stats wrapper class if stats are enabled\n      if (this.options.showStats) {\n        this.wrapper.classList.add('with-stats');\n      }\n      \n      // Apply instance-specific styles via CSS custom properties\n      if (this.options.fontSize) {\n        this.wrapper.style.setProperty('--instance-font-size', this.options.fontSize);\n      }\n      if (this.options.lineHeight) {\n        this.wrapper.style.setProperty('--instance-line-height', String(this.options.lineHeight));\n      }\n      if (this.options.padding) {\n        this.wrapper.style.setProperty('--instance-padding', this.options.padding);\n      }\n      \n      this.wrapper._instance = this;\n\n      // Create textarea\n      this.textarea = document.createElement('textarea');\n      this.textarea.className = 'overtype-input';\n      this.textarea.placeholder = this.options.placeholder;\n      this._configureTextarea();\n\n      // Create preview div\n      this.preview = document.createElement('div');\n      this.preview.className = 'overtype-preview';\n      this.preview.setAttribute('aria-hidden', 'true');\n\n      // Assemble DOM\n      this.wrapper.appendChild(this.textarea);\n      this.wrapper.appendChild(this.preview);\n      \n      // Add stats bar if enabled\n      if (this.options.showStats) {\n        this.statsBar = document.createElement('div');\n        this.statsBar.className = 'overtype-stats';\n        this.wrapper.appendChild(this.statsBar);\n        this._updateStats();\n      }\n      \n      // Add wrapper to container\n      this.container.appendChild(this.wrapper);\n      \n      // Add container to element\n      this.element.appendChild(this.container);\n    }\n\n    /**\n     * Configure textarea attributes\n     * @private\n     */\n    _configureTextarea() {\n      this.textarea.setAttribute('autocomplete', 'off');\n      this.textarea.setAttribute('autocorrect', 'off');\n      this.textarea.setAttribute('autocapitalize', 'off');\n      this.textarea.setAttribute('spellcheck', 'false');\n      this.textarea.setAttribute('data-gramm', 'false');\n      this.textarea.setAttribute('data-gramm_editor', 'false');\n      this.textarea.setAttribute('data-enable-grammarly', 'false');\n    }\n\n    /**\n     * Apply options to the editor\n     * @private\n     */\n    _applyOptions() {\n      // Apply autofocus\n      if (this.options.autofocus) {\n        this.textarea.focus();\n      }\n\n      // Update preview with initial content\n      this.updatePreview();\n    }\n\n    /**\n     * Update preview with parsed markdown\n     */\n    updatePreview() {\n      const text = this.textarea.value;\n      const cursorPos = this.textarea.selectionStart;\n      const activeLine = this._getCurrentLine(text, cursorPos);\n      \n      // Parse markdown\n      const html = MarkdownParser.parse(text, activeLine, this.options.showActiveLineRaw);\n      this.preview.innerHTML = html || '<span style=\"color: #808080;\">Start typing...</span>';\n      \n      // Apply code block backgrounds\n      this._applyCodeBlockBackgrounds();\n      \n      // Update stats if enabled\n      if (this.options.showStats && this.statsBar) {\n        this._updateStats();\n      }\n      \n      // Trigger onChange callback\n      if (this.options.onChange && this.initialized) {\n        this.options.onChange(text, this);\n      }\n    }\n\n    /**\n     * Apply background styling to code blocks\n     * @private\n     */\n    _applyCodeBlockBackgrounds() {\n      // Find all code fence elements\n      const codeFences = this.preview.querySelectorAll('.code-fence');\n      \n      // Process pairs of code fences\n      for (let i = 0; i < codeFences.length - 1; i += 2) {\n        const openFence = codeFences[i];\n        const closeFence = codeFences[i + 1];\n        \n        // Get parent divs\n        const openParent = openFence.parentElement;\n        const closeParent = closeFence.parentElement;\n        \n        if (!openParent || !closeParent) continue;\n        \n        // Make fences display: block\n        openFence.style.display = 'block';\n        closeFence.style.display = 'block';\n        \n        // Apply class to parent divs\n        openParent.classList.add('code-block-line');\n        closeParent.classList.add('code-block-line');\n        \n        // Apply class to all divs between the parent divs\n        let currentDiv = openParent.nextElementSibling;\n        while (currentDiv && currentDiv !== closeParent) {\n          // Apply class to divs between the fences\n          if (currentDiv.tagName === 'DIV') {\n            currentDiv.classList.add('code-block-line');\n          }\n          \n          // Move to next sibling\n          currentDiv = currentDiv.nextElementSibling;\n          \n          // Safety check to prevent infinite loop\n          if (!currentDiv) break;\n        }\n      }\n    }\n\n    /**\n     * Get current line number from cursor position\n     * @private\n     */\n    _getCurrentLine(text, cursorPos) {\n      const lines = text.substring(0, cursorPos).split('\\n');\n      return lines.length - 1;\n    }\n\n    /**\n     * Handle input events\n     * @private\n     */\n    handleInput(event) {\n      this.updatePreview();\n    }\n\n    /**\n     * Handle keydown events\n     * @private\n     */\n    handleKeydown(event) {\n      // Handle Tab key to prevent focus loss and insert spaces\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        \n        // Insert 2 spaces at cursor position\n        const start = this.textarea.selectionStart;\n        const end = this.textarea.selectionEnd;\n        const value = this.textarea.value;\n        \n        // If there's a selection, indent/outdent based on shift key\n        if (start !== end && event.shiftKey) {\n          // Outdent: remove 2 spaces from start of each selected line\n          const before = value.substring(0, start);\n          const selection = value.substring(start, end);\n          const after = value.substring(end);\n          \n          const lines = selection.split('\\n');\n          const outdented = lines.map(line => line.replace(/^  /, '')).join('\\n');\n          \n          this.textarea.value = before + outdented + after;\n          this.textarea.selectionStart = start;\n          this.textarea.selectionEnd = start + outdented.length;\n        } else if (start !== end) {\n          // Indent: add 2 spaces to start of each selected line\n          const before = value.substring(0, start);\n          const selection = value.substring(start, end);\n          const after = value.substring(end);\n          \n          const lines = selection.split('\\n');\n          const indented = lines.map(line => '  ' + line).join('\\n');\n          \n          this.textarea.value = before + indented + after;\n          this.textarea.selectionStart = start;\n          this.textarea.selectionEnd = start + indented.length;\n        } else {\n          // No selection: just insert 2 spaces\n          this.textarea.value = value.substring(0, start) + '  ' + value.substring(end);\n          this.textarea.selectionStart = this.textarea.selectionEnd = start + 2;\n        }\n        \n        // Trigger input event to update preview\n        this.textarea.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n      \n      // Let shortcuts manager handle other keys\n      const handled = this.shortcuts.handleKeydown(event);\n      \n      // Call user callback if provided\n      if (!handled && this.options.onKeydown) {\n        this.options.onKeydown(event, this);\n      }\n    }\n\n    /**\n     * Handle scroll events\n     * @private\n     */\n    handleScroll(event) {\n      // Sync preview scroll with textarea\n      this.preview.scrollTop = this.textarea.scrollTop;\n      this.preview.scrollLeft = this.textarea.scrollLeft;\n    }\n\n    /**\n     * Get editor content\n     * @returns {string} Current markdown content\n     */\n    getValue() {\n      return this.textarea.value;\n    }\n\n    /**\n     * Set editor content\n     * @param {string} value - Markdown content to set\n     */\n    setValue(value) {\n      this.textarea.value = value;\n      this.updatePreview();\n    }\n\n\n    /**\n     * Focus the editor\n     */\n    focus() {\n      this.textarea.focus();\n    }\n\n    /**\n     * Blur the editor\n     */\n    blur() {\n      this.textarea.blur();\n    }\n\n    /**\n     * Check if editor is initialized\n     * @returns {boolean}\n     */\n    isInitialized() {\n      return this.initialized;\n    }\n\n    /**\n     * Re-initialize with new options\n     * @param {Object} options - New options to apply\n     */\n    reinit(options = {}) {\n      this.options = this._mergeOptions({ ...this.options, ...options });\n      this._applyOptions();\n      this.updatePreview();\n    }\n\n    /**\n     * Update stats bar\n     * @private\n     */\n    _updateStats() {\n      if (!this.statsBar) return;\n      \n      const value = this.textarea.value;\n      const lines = value.split('\\n');\n      const chars = value.length;\n      const words = value.split(/\\s+/).filter(w => w.length > 0).length;\n      \n      // Calculate line and column\n      const selectionStart = this.textarea.selectionStart;\n      const beforeCursor = value.substring(0, selectionStart);\n      const linesBeforeCursor = beforeCursor.split('\\n');\n      const currentLine = linesBeforeCursor.length;\n      const currentColumn = linesBeforeCursor[linesBeforeCursor.length - 1].length + 1;\n      \n      // Use custom formatter if provided\n      if (this.options.statsFormatter) {\n        this.statsBar.innerHTML = this.options.statsFormatter({\n          chars,\n          words,\n          lines: lines.length,\n          line: currentLine,\n          column: currentColumn\n        });\n      } else {\n        // Default format with live dot\n        this.statsBar.innerHTML = `\n          <div class=\"overtype-stat\">\n            <span class=\"live-dot\"></span>\n            <span>${chars} chars, ${words} words, ${lines.length} lines</span>\n          </div>\n          <div class=\"overtype-stat\">Line ${currentLine}, Col ${currentColumn}</div>\n        `;\n      }\n    }\n    \n    /**\n     * Show or hide stats bar\n     * @param {boolean} show - Whether to show stats\n     */\n    showStats(show) {\n      this.options.showStats = show;\n      \n      if (show && !this.statsBar) {\n        // Create stats bar\n        this.statsBar = document.createElement('div');\n        this.statsBar.className = 'overtype-stats';\n        this.wrapper.appendChild(this.statsBar);\n        this.wrapper.classList.add('with-stats');\n        this._updateStats();\n      } else if (!show && this.statsBar) {\n        // Remove stats bar\n        this.statsBar.remove();\n        this.statsBar = null;\n        this.wrapper.classList.remove('with-stats');\n      }\n    }\n\n    /**\n     * Destroy the editor instance\n     */\n    destroy() {\n      // Remove instance reference\n      this.element.overTypeInstance = null;\n      OverType.instances.delete(this.element);\n\n      // Cleanup shortcuts\n      if (this.shortcuts) {\n        this.shortcuts.destroy();\n      }\n\n      // Remove DOM if created by us\n      if (this.wrapper) {\n        const content = this.getValue();\n        this.wrapper.remove();\n        \n        // Restore original content\n        this.element.textContent = content;\n      }\n\n      this.initialized = false;\n    }\n\n    // ===== Static Methods =====\n\n    /**\n     * Initialize multiple editors (static convenience method)\n     * @param {string|Element|NodeList|Array} target - Target element(s)\n     * @param {Object} options - Configuration options\n     * @returns {Array} Array of OverType instances\n     */\n    static init(target, options = {}) {\n      return new OverType(target, options);\n    }\n\n    /**\n     * Get instance from element\n     * @param {Element} element - DOM element\n     * @returns {OverType|null} OverType instance or null\n     */\n    static getInstance(element) {\n      return element.overTypeInstance || OverType.instances.get(element) || null;\n    }\n\n    /**\n     * Destroy all instances\n     */\n    static destroyAll() {\n      const elements = document.querySelectorAll('[data-overtype-instance]');\n      elements.forEach(element => {\n        const instance = OverType.getInstance(element);\n        if (instance) {\n          instance.destroy();\n        }\n      });\n    }\n\n    /**\n     * Inject styles into the document\n     * @param {boolean} force - Force re-injection\n     */\n    static injectStyles(force = false) {\n      if (OverType.stylesInjected && !force) return;\n\n      // Remove any existing OverType styles\n      const existing = document.querySelector('style.overtype-styles');\n      if (existing) {\n        existing.remove();\n      }\n\n      // Generate and inject new styles with current theme\n      const theme = OverType.currentTheme || solar;\n      const styles = generateStyles({ theme });\n      const styleEl = document.createElement('style');\n      styleEl.className = 'overtype-styles';\n      styleEl.textContent = styles;\n      document.head.appendChild(styleEl);\n\n      OverType.stylesInjected = true;\n    }\n    \n    /**\n     * Set global theme for all OverType instances\n     * @param {string|Object} theme - Theme name or custom theme object\n     * @param {Object} customColors - Optional color overrides\n     */\n    static setTheme(theme, customColors = null) {\n      // Process theme\n      let themeObj = typeof theme === 'string' ? getTheme(theme) : theme;\n      \n      // Apply custom colors if provided\n      if (customColors) {\n        themeObj = mergeTheme(themeObj, customColors);\n      }\n      \n      // Store as current theme\n      OverType.currentTheme = themeObj;\n      \n      // Re-inject styles with new theme\n      OverType.injectStyles(true);\n      \n      // Update all existing instances - update container theme attribute\n      document.querySelectorAll('.overtype-container').forEach(container => {\n        const themeName = typeof themeObj === 'string' ? themeObj : themeObj.name;\n        if (themeName) {\n          container.setAttribute('data-theme', themeName);\n        }\n      });\n      \n      // Also handle any old-style wrappers without containers\n      document.querySelectorAll('.overtype-wrapper').forEach(wrapper => {\n        if (!wrapper.closest('.overtype-container')) {\n          const themeName = typeof themeObj === 'string' ? themeObj : themeObj.name;\n          if (themeName) {\n            wrapper.setAttribute('data-theme', themeName);\n          }\n        }\n        \n        // Trigger preview update for the instance\n        const instance = wrapper._instance;\n        if (instance) {\n          instance.updatePreview();\n        }\n      });\n    }\n\n    /**\n     * Initialize global event listeners\n     */\n    static initGlobalListeners() {\n      if (OverType.globalListenersInitialized) return;\n\n      // Input event\n      document.addEventListener('input', (e) => {\n        if (e.target && e.target.classList && e.target.classList.contains('overtype-input')) {\n          const wrapper = e.target.closest('.overtype-wrapper');\n          const instance = wrapper?._instance;\n          if (instance) instance.handleInput(e);\n        }\n      });\n\n      // Keydown event\n      document.addEventListener('keydown', (e) => {\n        if (e.target && e.target.classList && e.target.classList.contains('overtype-input')) {\n          const wrapper = e.target.closest('.overtype-wrapper');\n          const instance = wrapper?._instance;\n          if (instance) instance.handleKeydown(e);\n        }\n      });\n\n      // Scroll event\n      document.addEventListener('scroll', (e) => {\n        if (e.target && e.target.classList && e.target.classList.contains('overtype-input')) {\n          const wrapper = e.target.closest('.overtype-wrapper');\n          const instance = wrapper?._instance;\n          if (instance) instance.handleScroll(e);\n        }\n      }, true);\n\n      // Selection change event\n      document.addEventListener('selectionchange', (e) => {\n        const activeElement = document.activeElement;\n        if (activeElement && activeElement.classList.contains('overtype-input')) {\n          const wrapper = activeElement.closest('.overtype-wrapper');\n          const instance = wrapper?._instance;\n          if (instance) {\n            // Update stats bar for cursor position\n            if (instance.options.showStats && instance.statsBar) {\n              instance._updateStats();\n            }\n            // Debounce updates\n            clearTimeout(instance._selectionTimeout);\n            instance._selectionTimeout = setTimeout(() => {\n              instance.updatePreview();\n            }, 50);\n          }\n        }\n      });\n\n      OverType.globalListenersInitialized = true;\n    }\n}\n\n// Export classes for advanced usage\nOverType.MarkdownParser = MarkdownParser;\nOverType.ShortcutsManager = ShortcutsManager;\n\n// Export theme utilities\nOverType.themes = { solar, cave: getTheme('cave') };\nOverType.getTheme = getTheme;\n\n// Set default theme\nOverType.currentTheme = solar;\n\n// For IIFE builds, esbuild needs the class as the default export\nexport default OverType;\n// Also export as named for ESM compatibility\nexport { OverType };", "/**\n * MarkdownParser - Parses markdown into HTML while preserving character alignment\n * \n * Key principles:\n * - Every character must occupy the exact same position as in the textarea\n * - No font-size changes, no padding/margin on inline elements\n * - Markdown tokens remain visible but styled\n */\nexport class MarkdownParser {\n  /**\n   * Escape HTML special characters\n   * @param {string} text - Raw text to escape\n   * @returns {string} Escaped HTML-safe text\n   */\n  static escapeHtml(text) {\n    const map = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    };\n    return text.replace(/[&<>\"']/g, m => map[m]);\n  }\n\n  /**\n   * Preserve leading spaces as non-breaking spaces\n   * @param {string} html - HTML string\n   * @param {string} originalLine - Original line with spaces\n   * @returns {string} HTML with preserved indentation\n   */\n  static preserveIndentation(html, originalLine) {\n    const leadingSpaces = originalLine.match(/^(\\s*)/)[1];\n    const indentation = leadingSpaces.replace(/ /g, '&nbsp;');\n    return html.replace(/^\\s*/, indentation);\n  }\n\n  /**\n   * Parse headers (h1-h3 only)\n   * @param {string} html - HTML line to parse\n   * @returns {string} Parsed HTML with header styling\n   */\n  static parseHeader(html) {\n    return html.replace(/^(#{1,3})\\s(.+)$/, (match, hashes, content) => {\n      const level = hashes.length;\n      const levelClasses = ['h1', 'h2', 'h3'];\n      return `<span class=\"header ${levelClasses[level-1]}\"><span class=\"syntax-marker\">${hashes}</span> ${content}</span>`;\n    });\n  }\n\n  /**\n   * Parse horizontal rules\n   * @param {string} html - HTML line to parse\n   * @returns {string|null} Parsed horizontal rule or null\n   */\n  static parseHorizontalRule(html) {\n    if (html.match(/^(-{3,}|\\*{3,}|_{3,})$/)) {\n      return `<div><span class=\"hr-marker\">${html}</span></div>`;\n    }\n    return null;\n  }\n\n  /**\n   * Parse blockquotes\n   * @param {string} html - HTML line to parse\n   * @returns {string} Parsed blockquote\n   */\n  static parseBlockquote(html) {\n    return html.replace(/^&gt; (.+)$/, (match, content) => {\n      return `<span class=\"blockquote\"><span class=\"syntax-marker\">&gt;</span> ${content}</span>`;\n    });\n  }\n\n  /**\n   * Parse bullet lists\n   * @param {string} html - HTML line to parse\n   * @returns {string} Parsed bullet list item\n   */\n  static parseBulletList(html) {\n    return html.replace(/^((?:&nbsp;)*)([-*])\\s(.+)$/, (match, indent, marker, content) => {\n      return `${indent}<span class=\"syntax-marker\">${marker}</span> ${content}`;\n    });\n  }\n\n  /**\n   * Parse numbered lists\n   * @param {string} html - HTML line to parse\n   * @returns {string} Parsed numbered list item\n   */\n  static parseNumberedList(html) {\n    return html.replace(/^((?:&nbsp;)*)(\\d+\\.)\\s(.+)$/, (match, indent, marker, content) => {\n      return `${indent}<span class=\"syntax-marker\">${marker}</span> ${content}`;\n    });\n  }\n\n  /**\n   * Parse code blocks (markers only)\n   * @param {string} html - HTML line to parse\n   * @returns {string|null} Parsed code fence or null\n   */\n  static parseCodeBlock(html) {\n    if (html.startsWith('```')) {\n      return `<div><span class=\"code-fence\">${html}</span></div>`;\n    }\n    return null;\n  }\n\n  /**\n   * Parse bold text\n   * @param {string} html - HTML with potential bold markdown\n   * @returns {string} HTML with bold styling\n   */\n  static parseBold(html) {\n    html = html.replace(/\\*\\*(.+?)\\*\\*/g, '<strong><span class=\"syntax-marker\">**</span>$1<span class=\"syntax-marker\">**</span></strong>');\n    html = html.replace(/__(.+?)__/g, '<strong><span class=\"syntax-marker\">__</span>$1<span class=\"syntax-marker\">__</span></strong>');\n    return html;\n  }\n\n  /**\n   * Parse italic text\n   * Note: Uses lookbehind assertions - requires modern browsers\n   * @param {string} html - HTML with potential italic markdown\n   * @returns {string} HTML with italic styling\n   */\n  static parseItalic(html) {\n    html = html.replace(/(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)/g, '<em><span class=\"syntax-marker\">*</span>$1<span class=\"syntax-marker\">*</span></em>');\n    html = html.replace(/(?<!_)_(?!_)(.+?)(?<!_)_(?!_)/g, '<em><span class=\"syntax-marker\">_</span>$1<span class=\"syntax-marker\">_</span></em>');\n    return html;\n  }\n\n  /**\n   * Parse inline code\n   * @param {string} html - HTML with potential code markdown\n   * @returns {string} HTML with code styling\n   */\n  static parseInlineCode(html) {\n    return html.replace(/`(.+?)`/g, '<code><span class=\"syntax-marker\">`</span>$1<span class=\"syntax-marker\">`</span></code>');\n  }\n\n  /**\n   * Parse links\n   * @param {string} html - HTML with potential link markdown\n   * @returns {string} HTML with link styling\n   */\n  static parseLinks(html) {\n    return html.replace(/\\[(.+?)\\]\\((.+?)\\)/g, '<a href=\"$2\"><span class=\"syntax-marker\">[</span>$1<span class=\"syntax-marker\">](</span><span class=\"syntax-marker\">$2</span><span class=\"syntax-marker\">)</span></a>');\n  }\n\n  /**\n   * Parse all inline elements in correct order\n   * @param {string} text - Text with potential inline markdown\n   * @returns {string} HTML with all inline styling\n   */\n  static parseInlineElements(text) {\n    let html = text;\n    // Order matters: parse code first to avoid conflicts\n    html = this.parseInlineCode(html);\n    // Use placeholders to protect inline code while preserving formatting spans\n    // We use Unicode Private Use Area (U+E000-U+F8FF) as placeholders because:\n    // 1. These characters are reserved for application-specific use\n    // 2. They'll never appear in user text\n    // 3. They maintain single-character width (important for alignment)\n    // 4. They're invisible if accidentally rendered\n    // This allows formatting like *text `code` text* to span across code blocks\n    // while preventing formatting inside code like `__init__` from being bolded\n    const codeBlocks = new Map();\n    html = html.replace(/(<code>.*?<\\/code>)/g, (match) => {\n      const placeholder = `\\uE000${codeBlocks.size}\\uE001`;\n      codeBlocks.set(placeholder, match);\n      return placeholder;\n    });\n    // Process other inline elements on text with placeholders\n    html = this.parseLinks(html);\n    html = this.parseBold(html);\n    html = this.parseItalic(html);\n    // Restore code blocks\n    codeBlocks.forEach((codeBlock, placeholder) => {\n      html = html.replace(placeholder, codeBlock);\n    });\n    return html;\n  }\n\n  /**\n   * Parse a single line of markdown\n   * @param {string} line - Raw markdown line\n   * @returns {string} Parsed HTML line\n   */\n  static parseLine(line) {\n    let html = this.escapeHtml(line);\n    \n    // Preserve indentation\n    html = this.preserveIndentation(html, line);\n    \n    // Check for block elements first\n    const horizontalRule = this.parseHorizontalRule(html);\n    if (horizontalRule) return horizontalRule;\n    \n    const codeBlock = this.parseCodeBlock(html);\n    if (codeBlock) return codeBlock;\n    \n    // Parse block elements\n    html = this.parseHeader(html);\n    html = this.parseBlockquote(html);\n    html = this.parseBulletList(html);\n    html = this.parseNumberedList(html);\n    \n    // Parse inline elements\n    html = this.parseInlineElements(html);\n    \n    // Wrap in div to maintain line structure\n    if (html.trim() === '') {\n      return '<div>&nbsp;</div>';\n    }\n    \n    return `<div>${html}</div>`;\n  }\n\n  /**\n   * Parse full markdown text\n   * @param {string} text - Full markdown text\n   * @param {number} activeLine - Currently active line index (optional)\n   * @param {boolean} showActiveLineRaw - Show raw markdown on active line\n   * @returns {string} Parsed HTML\n   */\n  static parse(text, activeLine = -1, showActiveLineRaw = false) {\n    const lines = text.split('\\n');\n    const parsedLines = lines.map((line, index) => {\n      // Show raw markdown on active line if requested\n      if (showActiveLineRaw && index === activeLine) {\n        const content = this.escapeHtml(line) || '&nbsp;';\n        return `<div class=\"raw-line\">${content}</div>`;\n      }\n      \n      // Otherwise, parse the markdown normally\n      return this.parseLine(line);\n    });\n    \n    // Join without newlines to prevent extra spacing\n    return parsedLines.join('');\n  }\n}", "/**\n * Format definitions for markdown syntax\n */\n\nexport const FORMATS = {\n  bold: {\n    prefix: '**',\n    suffix: '**',\n    trimFirst: true\n  },\n  italic: {\n    prefix: '_',\n    suffix: '_',\n    trimFirst: true\n  },\n  code: {\n    prefix: '`',\n    suffix: '`',\n    blockPrefix: '```',\n    blockSuffix: '```'\n  },\n  link: {\n    prefix: '[',\n    suffix: '](url)',\n    replaceNext: 'url',\n    scanFor: 'https?://'\n  },\n  bulletList: {\n    prefix: '- ',\n    multiline: true,\n    unorderedList: true\n  },\n  numberedList: {\n    prefix: '1. ',\n    multiline: true,\n    orderedList: true\n  },\n  quote: {\n    prefix: '> ',\n    multiline: true,\n    surroundWithNewlines: true\n  },\n  taskList: {\n    prefix: '- [ ] ',\n    multiline: true,\n    surroundWithNewlines: true\n  },\n  header1: { prefix: '# ' },\n  header2: { prefix: '## ' },\n  header3: { prefix: '### ' },\n  header4: { prefix: '#### ' },\n  header5: { prefix: '##### ' },\n  header6: { prefix: '###### ' }\n}\n\n/**\n * Default style configuration\n */\nexport function getDefaultStyle() {\n  return {\n    prefix: '',\n    suffix: '',\n    blockPrefix: '',\n    blockSuffix: '',\n    multiline: false,\n    replaceNext: '',\n    prefixSpace: false,\n    scanFor: '',\n    surroundWithNewlines: false,\n    orderedList: false,\n    unorderedList: false,\n    trimFirst: false\n  }\n}\n\n/**\n * Merge format with defaults\n */\nexport function mergeWithDefaults(format) {\n  return { ...getDefaultStyle(), ...format }\n}", "/**\n * Debug utilities for markdown-actions\n * Add console logging to track what's happening\n */\n\n// Debug mode flag - disabled by default\nlet debugMode = false;\n\n/**\n * Enable or disable debug mode\n * @param {boolean} enabled - Whether to enable debug mode\n */\nexport function setDebugMode(enabled) {\n  debugMode = enabled;\n}\n\n/**\n * Get current debug mode status\n * @returns {boolean} Whether debug mode is enabled\n */\nexport function getDebugMode() {\n  return debugMode;\n}\n\nexport function debugLog(funcName, message, data) {\n  // These will be completely removed by esbuild's drop: ['console'] in production\n  if (!debugMode) return;\n  \n  console.group(`\uD83D\uDD0D ${funcName}`);\n  console.log(message);\n  if (data) {\n    console.log('Data:', data);\n  }\n  console.groupEnd();\n}\n\nexport function debugSelection(textarea, label) {\n  // These will be completely removed by esbuild's drop: ['console'] in production\n  if (!debugMode) return;\n  \n  const selected = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  console.group(`\uD83D\uDCCD Selection: ${label}`);\n  console.log('Position:', `${textarea.selectionStart}-${textarea.selectionEnd}`);\n  console.log('Selected text:', JSON.stringify(selected));\n  console.log('Length:', selected.length);\n  \n  // Show context around selection\n  const before = textarea.value.slice(Math.max(0, textarea.selectionStart - 10), textarea.selectionStart);\n  const after = textarea.value.slice(textarea.selectionEnd, Math.min(textarea.value.length, textarea.selectionEnd + 10));\n  console.log('Context:', JSON.stringify(before) + '[SELECTION]' + JSON.stringify(after));\n  console.groupEnd();\n}\n\nexport function debugResult(result) {\n  // These will be completely removed by esbuild's drop: ['console'] in production\n  if (!debugMode) return;\n  \n  console.group('\uD83D\uDCDD Result');\n  console.log('Text to insert:', JSON.stringify(result.text));\n  console.log('New selection:', `${result.selectionStart}-${result.selectionEnd}`);\n  console.groupEnd();\n}", "/**\n * Text insertion system with undo/redo support\n * Extracted and adapted from GitHub's markdown-toolbar-element\n */\n\nimport { getDebugMode } from '../debug.js'\n\nlet canInsertText = null\n\n/**\n * Insert text at current position with undo/redo support\n * @param {HTMLTextAreaElement} textarea - Target textarea\n * @param {Object} options - Text and selection options\n * @param {string} options.text - Text to insert\n * @param {number} [options.selectionStart] - New selection start\n * @param {number} [options.selectionEnd] - New selection end\n */\nexport function insertText(textarea, { text, selectionStart, selectionEnd }) {\n  const debugMode = getDebugMode();\n  \n  if (debugMode) {\n    console.group('\uD83D\uDD27 insertText');\n    console.log('Current selection:', `${textarea.selectionStart}-${textarea.selectionEnd}`);\n    console.log('Text to insert:', JSON.stringify(text));\n    console.log('New selection to set:', selectionStart, '-', selectionEnd);\n  }\n  \n  // Make sure the textarea is focused\n  textarea.focus();\n  \n  const originalSelectionStart = textarea.selectionStart\n  const originalSelectionEnd = textarea.selectionEnd\n  const before = textarea.value.slice(0, originalSelectionStart)\n  const after = textarea.value.slice(originalSelectionEnd)\n  \n  if (debugMode) {\n    console.log('Before text (last 20):', JSON.stringify(before.slice(-20)));\n    console.log('After text (first 20):', JSON.stringify(after.slice(0, 20)));\n    console.log('Selected text being replaced:', JSON.stringify(textarea.value.slice(originalSelectionStart, originalSelectionEnd)));\n  }\n  \n  // Store the original value to check if execCommand actually changed it\n  const originalValue = textarea.value\n\n  // Try execCommand for both insertions and replacements to preserve undo history\n  // execCommand('insertText') can handle replacing selected text\n  const hasSelection = originalSelectionStart !== originalSelectionEnd\n  \n  if (canInsertText === null || canInsertText === true) {\n    textarea.contentEditable = 'true'\n    try {\n      canInsertText = document.execCommand('insertText', false, text)\n      if (debugMode) console.log('execCommand returned:', canInsertText, 'for text with', text.split('\\n').length, 'lines');\n    } catch (error) {\n      canInsertText = false\n      if (debugMode) console.log('execCommand threw error:', error);\n    }\n    textarea.contentEditable = 'false'\n  }\n\n  if (debugMode) {\n    console.log('canInsertText before:', canInsertText);\n    console.log('execCommand result:', canInsertText);\n  }\n  \n  // Check if execCommand actually worked by comparing the value\n  if (canInsertText) {\n    const expectedValue = before + text + after\n    const actualValue = textarea.value\n    \n    if (debugMode) {\n      console.log('Expected length:', expectedValue.length);\n      console.log('Actual length:', actualValue.length);\n    }\n    \n    if (actualValue !== expectedValue) {\n      if (debugMode) {\n        console.log('execCommand changed the value but not as expected');\n        console.log('Expected:', JSON.stringify(expectedValue.slice(0, 100)));\n        console.log('Actual:', JSON.stringify(actualValue.slice(0, 100)));\n      }\n      // Don't set canInsertText to false here - execCommand did work\n      // We just need to not double-insert\n    }\n  }\n\n  if (!canInsertText) {\n    if (debugMode) console.log('Using manual insertion');\n    // Only do manual insertion if execCommand didn't change the value\n    if (textarea.value === originalValue) {\n      if (debugMode) console.log('Value unchanged, doing manual replacement');\n      try {\n        document.execCommand('ms-beginUndoUnit')\n      } catch (e) {\n        // Do nothing.\n      }\n      textarea.value = before + text + after\n      try {\n        document.execCommand('ms-endUndoUnit')\n      } catch (e) {\n        // Do nothing.\n      }\n      textarea.dispatchEvent(new CustomEvent('input', { bubbles: true, cancelable: true }))\n    } else {\n      if (debugMode) console.log('Value was changed by execCommand, skipping manual insertion');\n    }\n  }\n\n  if (debugMode) console.log('Setting selection range:', selectionStart, selectionEnd);\n  if (selectionStart != null && selectionEnd != null) {\n    textarea.setSelectionRange(selectionStart, selectionEnd)\n  } else {\n    textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd)\n  }\n  \n  if (debugMode) {\n    console.log('Final value length:', textarea.value.length);\n    console.groupEnd();\n  }\n}\n\n/**\n * Configure undo method\n * @param {'native' | 'manual' | 'auto'} method - Undo method to use\n */\nexport function setUndoMethod(method) {\n  switch (method) {\n    case 'native':\n      canInsertText = true\n      break\n    case 'manual':\n      canInsertText = false\n      break\n    case 'auto':\n      canInsertText = null\n      break\n  }\n}", "/**\n * Core selection utilities extracted and adapted from GitHub's markdown-toolbar-element\n */\n\n/**\n * Check if string contains multiple lines\n */\nexport function isMultipleLines(string) {\n  return string.trim().split('\\n').length > 1\n}\n\n/**\n * Find the start of the word at position i\n */\nexport function wordSelectionStart(text, i) {\n  let index = i\n  while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n    index--\n  }\n  return index\n}\n\n/**\n * Find the end of the word at position i\n */\nexport function wordSelectionEnd(text, i, multiline) {\n  let index = i\n  const breakpoint = multiline ? /\\n/ : /\\s/\n  while (text[index] && !text[index].match(breakpoint)) {\n    index++\n  }\n  return index\n}\n\n/**\n * Expand selection to line boundaries\n */\nexport function expandSelectionToLine(textarea) {\n  const lines = textarea.value.split('\\n')\n  let counter = 0\n  for (let index = 0; index < lines.length; index++) {\n    const lineLength = lines[index].length + 1\n    if (textarea.selectionStart >= counter && textarea.selectionStart < counter + lineLength) {\n      textarea.selectionStart = counter\n    }\n    if (textarea.selectionEnd >= counter && textarea.selectionEnd < counter + lineLength) {\n      // For the last line, don't go past the actual text length\n      if (index === lines.length - 1) {\n        textarea.selectionEnd = Math.min(counter + lines[index].length, textarea.value.length)\n      } else {\n        textarea.selectionEnd = counter + lineLength - 1\n      }\n    }\n    counter += lineLength\n  }\n}\n\n/**\n * Expand selected text with smart boundary detection\n */\nexport function expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n  if (textarea.selectionStart === textarea.selectionEnd) {\n    textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart)\n    textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline)\n  } else {\n    const expandedSelectionStart = textarea.selectionStart - prefixToUse.length\n    const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length\n    const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse\n    const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse\n    if (beginsWithPrefix && endsWithSuffix) {\n      textarea.selectionStart = expandedSelectionStart\n      textarea.selectionEnd = expandedSelectionEnd\n    }\n  }\n  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n}\n\n/**\n * Calculate newlines needed to surround selected text\n */\nexport function newlinesToSurroundSelectedText(textarea) {\n  const beforeSelection = textarea.value.slice(0, textarea.selectionStart)\n  const afterSelection = textarea.value.slice(textarea.selectionEnd)\n\n  const breaksBefore = beforeSelection.match(/\\n*$/)\n  const breaksAfter = afterSelection.match(/^\\n*/)\n  const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0\n  const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0\n\n  let newlinesToAppend = ''\n  let newlinesToPrepend = ''\n\n  if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n    newlinesToAppend = '\\n'.repeat(2 - newlinesBeforeSelection)\n  }\n\n  if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n    newlinesToPrepend = '\\n'.repeat(2 - newlinesAfterSelection)\n  }\n\n  return { newlinesToAppend, newlinesToPrepend }\n}\n\n/**\n * Utility to preserve selection during operations\n */\nexport function preserveSelection(textarea, callback) {\n  const start = textarea.selectionStart\n  const end = textarea.selectionEnd\n  const scrollTop = textarea.scrollTop\n  \n  callback()\n  \n  textarea.selectionStart = start\n  textarea.selectionEnd = end\n  textarea.scrollTop = scrollTop\n}\n\n/**\n * Apply a line-based operation with cursor preservation\n * This function handles expanding to line boundaries and preserving cursor position\n * @param {HTMLTextAreaElement} textarea - The textarea element\n * @param {Function} operation - The operation to perform (receives textarea and returns result)\n * @param {Object} options - Options for the operation\n * @param {string} options.prefix - The prefix being added/removed (for cursor adjustment)\n * @param {Function} options.adjustSelection - Custom selection adjustment function\n * @returns {Object} The result from the operation with adjusted cursor position\n */\nexport function applyLineOperation(textarea, operation, options = {}) {\n  // Save original cursor position AND selection before any expansion\n  const originalStart = textarea.selectionStart\n  const originalEnd = textarea.selectionEnd\n  const noInitialSelection = originalStart === originalEnd\n  \n  // Store the line start position to calculate offset later\n  const value = textarea.value\n  let lineStart = originalStart\n  \n  // Find start of the line containing the selection start\n  while (lineStart > 0 && value[lineStart - 1] !== '\\n') {\n    lineStart--\n  }\n  \n  // Expand selection to line boundaries for the operation\n  if (noInitialSelection) {\n    // Expand to current line when no selection\n    let lineEnd = originalStart\n    \n    // Find end of current line\n    while (lineEnd < value.length && value[lineEnd] !== '\\n') {\n      lineEnd++\n    }\n    \n    textarea.selectionStart = lineStart\n    textarea.selectionEnd = lineEnd\n  } else {\n    // For selections, expand to full lines\n    expandSelectionToLine(textarea)\n  }\n  \n  // Apply the operation\n  const result = operation(textarea)\n  \n  // Restore original selection/cursor with prefix adjustment\n  if (options.adjustSelection) {\n    // Use custom selection adjustment logic\n    const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n    const isRemoving = selectedText.startsWith(options.prefix)\n    const adjusted = options.adjustSelection(isRemoving, originalStart, originalEnd, lineStart)\n    result.selectionStart = adjusted.start\n    result.selectionEnd = adjusted.end\n  } else if (options.prefix) {\n    // Use default prefix-based adjustment\n    const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n    const isRemoving = selectedText.startsWith(options.prefix)\n    \n    if (noInitialSelection) {\n      // No selection - just restore cursor position\n      if (isRemoving) {\n        // When removing prefix, adjust cursor position\n        result.selectionStart = Math.max(originalStart - options.prefix.length, lineStart)\n        result.selectionEnd = result.selectionStart\n      } else {\n        // When adding prefix, adjust cursor position\n        result.selectionStart = originalStart + options.prefix.length\n        result.selectionEnd = result.selectionStart\n      }\n    } else {\n      // Had a selection - restore it with adjustment\n      if (isRemoving) {\n        // When removing prefix, shift selection back\n        result.selectionStart = Math.max(originalStart - options.prefix.length, lineStart)\n        result.selectionEnd = Math.max(originalEnd - options.prefix.length, lineStart)\n      } else {\n        // When adding prefix, shift selection forward\n        result.selectionStart = originalStart + options.prefix.length\n        result.selectionEnd = originalEnd + options.prefix.length\n      }\n    }\n  }\n  \n  return result\n}", "/**\n * Block-level text formatting operations\n * Handles inline formats like bold, italic, code, and links\n */\n\nimport { expandSelectedText, newlinesToSurroundSelectedText, isMultipleLines } from '../core/selection.js'\nimport { insertText } from '../core/insertion.js'\n\n/**\n * Apply block-level styling to selected text\n */\nexport function blockStyle(textarea, style) {\n  let newlinesToAppend\n  let newlinesToPrepend\n\n  const { prefix, suffix, blockPrefix, blockSuffix, replaceNext, prefixSpace, scanFor, surroundWithNewlines, trimFirst } = style\n  const originalSelectionStart = textarea.selectionStart\n  const originalSelectionEnd = textarea.selectionEnd\n\n  let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n  let prefixToUse = isMultipleLines(selectedText) && blockPrefix && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix\n  let suffixToUse = isMultipleLines(selectedText) && blockSuffix && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix\n\n  if (prefixSpace) {\n    const beforeSelection = textarea.value[textarea.selectionStart - 1]\n    if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n      prefixToUse = ` ${prefixToUse}`\n    }\n  }\n  \n  selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, style.multiline)\n  let selectionStart = textarea.selectionStart\n  let selectionEnd = textarea.selectionEnd\n  const hasReplaceNext = replaceNext && replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0\n  \n  if (surroundWithNewlines) {\n    const ref = newlinesToSurroundSelectedText(textarea)\n    newlinesToAppend = ref.newlinesToAppend\n    newlinesToPrepend = ref.newlinesToPrepend\n    prefixToUse = newlinesToAppend + prefix\n    suffixToUse += newlinesToPrepend\n  }\n\n  // Check if we should remove formatting (toggle off)\n  if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n    const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length)\n    if (originalSelectionStart === originalSelectionEnd) {\n      let position = originalSelectionStart - prefixToUse.length\n      position = Math.max(position, selectionStart)\n      position = Math.min(position, selectionStart + replacementText.length)\n      selectionStart = selectionEnd = position\n    } else {\n      selectionEnd = selectionStart + replacementText.length\n    }\n    return { text: replacementText, selectionStart, selectionEnd }\n  } else if (!hasReplaceNext) {\n    // Add formatting\n    let replacementText = prefixToUse + selectedText + suffixToUse\n    selectionStart = originalSelectionStart + prefixToUse.length\n    selectionEnd = originalSelectionEnd + prefixToUse.length\n    const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g)\n    if (trimFirst && whitespaceEdges) {\n      const leadingWhitespace = whitespaceEdges[0] || ''\n      const trailingWhitespace = whitespaceEdges[1] || ''\n      replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace\n      selectionStart += leadingWhitespace.length\n      selectionEnd -= trailingWhitespace.length\n    }\n    return { text: replacementText, selectionStart, selectionEnd }\n  } else if (scanFor && scanFor.length > 0 && selectedText.match(scanFor)) {\n    // Handle link/image with URL detection\n    suffixToUse = suffixToUse.replace(replaceNext, selectedText)\n    const replacementText = prefixToUse + suffixToUse\n    selectionStart = selectionEnd = selectionStart + prefixToUse.length\n    return { text: replacementText, selectionStart, selectionEnd }\n  } else {\n    // Handle link/image with placeholder\n    const replacementText = prefixToUse + selectedText + suffixToUse\n    selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext)\n    selectionEnd = selectionStart + replaceNext.length\n    return { text: replacementText, selectionStart, selectionEnd }\n  }\n}\n\n/**\n * Apply style to selected text in textarea\n */\nexport function styleSelectedText(textarea, style) {\n  const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n  \n  let result\n  if (style.orderedList || style.unorderedList) {\n    // Will be handled by list operations\n    return\n  } else if (style.multiline && isMultipleLines(text)) {\n    result = multilineStyle(textarea, style)\n  } else {\n    result = blockStyle(textarea, style)\n  }\n\n  insertText(textarea, result)\n}\n\n/**\n * Apply multiline styling (quotes, task lists, etc)\n * Note: This does NOT expand selection to line - that should be done by the caller if needed\n */\nexport function multilineStyle(textarea, style) {\n  const { prefix, suffix, surroundWithNewlines } = style\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n  let selectionStart = textarea.selectionStart\n  let selectionEnd = textarea.selectionEnd\n  const lines = text.split('\\n')\n  \n  // Check if we need to undo (all lines have the format)\n  const undoStyle = lines.every(line => line.startsWith(prefix) && (!suffix || line.endsWith(suffix)))\n\n  if (undoStyle) {\n    // Remove the formatting\n    text = lines.map(line => {\n      let result = line.slice(prefix.length)\n      if (suffix) {\n        result = result.slice(0, result.length - suffix.length)\n      }\n      return result\n    }).join('\\n')\n    selectionEnd = selectionStart + text.length\n  } else {\n    // Apply the formatting\n    text = lines.map(line => prefix + line + (suffix || '')).join('\\n')\n    if (surroundWithNewlines) {\n      const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea)\n      selectionStart += newlinesToAppend.length\n      selectionEnd = selectionStart + text.length\n      text = newlinesToAppend + text + newlinesToPrepend\n    }\n  }\n\n  return { text, selectionStart, selectionEnd }\n}", "/**\n * List operations for bullet and numbered lists\n */\n\nimport { expandSelectionToLine, newlinesToSurroundSelectedText, applyLineOperation } from '../core/selection.js'\nimport { insertText } from '../core/insertion.js'\n\n/**\n * Undo ordered list formatting\n */\nfunction undoOrderedListStyle(text) {\n  const lines = text.split('\\n')\n  const orderedListRegex = /^\\d+\\.\\s+/\n  const shouldUndoOrderedList = lines.every(line => orderedListRegex.test(line))\n  let result = lines\n  if (shouldUndoOrderedList) {\n    result = lines.map(line => line.replace(orderedListRegex, ''))\n  }\n\n  return {\n    text: result.join('\\n'),\n    processed: shouldUndoOrderedList\n  }\n}\n\n/**\n * Undo unordered list formatting\n */\nfunction undoUnorderedListStyle(text) {\n  const lines = text.split('\\n')\n  const unorderedListPrefix = '- '\n  const shouldUndoUnorderedList = lines.every(line => line.startsWith(unorderedListPrefix))\n  let result = lines\n  if (shouldUndoUnorderedList) {\n    result = lines.map(line => line.slice(unorderedListPrefix.length))\n  }\n\n  return {\n    text: result.join('\\n'),\n    processed: shouldUndoUnorderedList\n  }\n}\n\n/**\n * Make prefix for list item\n */\nfunction makePrefix(index, unorderedList) {\n  if (unorderedList) {\n    return '- '\n  } else {\n    return `${index + 1}. `\n  }\n}\n\n/**\n * Clear existing list style\n */\nfunction clearExistingListStyle(style, selectedText) {\n  let undoResult\n  let undoResultOppositeList\n  let pristineText\n  \n  if (style.orderedList) {\n    undoResult = undoOrderedListStyle(selectedText)\n    undoResultOppositeList = undoUnorderedListStyle(undoResult.text)\n    pristineText = undoResultOppositeList.text\n  } else {\n    undoResult = undoUnorderedListStyle(selectedText)\n    undoResultOppositeList = undoOrderedListStyle(undoResult.text)\n    pristineText = undoResultOppositeList.text\n  }\n  \n  return [undoResult, undoResultOppositeList, pristineText]\n}\n\n/**\n * Apply list styling to selected text\n */\nexport function listStyle(textarea, style) {\n  const noInitialSelection = textarea.selectionStart === textarea.selectionEnd\n  let selectionStart = textarea.selectionStart\n  let selectionEnd = textarea.selectionEnd\n\n  // Select whole line\n  expandSelectionToLine(textarea)\n\n  const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n\n  // Clear any existing list formatting\n  const [undoResult, undoResultOppositeList, pristineText] = clearExistingListStyle(style, selectedText)\n\n  const prefixedLines = pristineText.split('\\n').map((value, index) => {\n    return `${makePrefix(index, style.unorderedList)}${value}`\n  })\n\n  const totalPrefixLength = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n    return previousValue + makePrefix(currentIndex, style.unorderedList).length\n  }, 0)\n\n  const totalPrefixLengthOppositeList = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n    return previousValue + makePrefix(currentIndex, !style.unorderedList).length\n  }, 0)\n\n  // If we're undoing the same list type, just return the pristine text\n  if (undoResult.processed) {\n    if (noInitialSelection) {\n      selectionStart = Math.max(selectionStart - makePrefix(0, style.unorderedList).length, 0)\n      selectionEnd = selectionStart\n    } else {\n      selectionStart = textarea.selectionStart\n      selectionEnd = textarea.selectionEnd - totalPrefixLength\n    }\n    return { text: pristineText, selectionStart, selectionEnd }\n  }\n\n  // Apply new list formatting\n  const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea)\n  const text = newlinesToAppend + prefixedLines.join('\\n') + newlinesToPrepend\n\n  if (noInitialSelection) {\n    selectionStart = Math.max(selectionStart + makePrefix(0, style.unorderedList).length + newlinesToAppend.length, 0)\n    selectionEnd = selectionStart\n  } else {\n    if (undoResultOppositeList.processed) {\n      // Converting from one list type to another\n      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0)\n      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength - totalPrefixLengthOppositeList\n    } else {\n      // Adding list formatting to plain text\n      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0)\n      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength\n    }\n  }\n\n  return { text, selectionStart, selectionEnd }\n}\n\n/**\n * Apply list style to textarea\n */\nexport function applyListStyle(textarea, style) {\n  // Use applyLineOperation for consistent selection preservation\n  const result = applyLineOperation(\n    textarea,\n    (ta) => listStyle(ta, style),\n    {\n      // Custom selection adjustment for lists\n      adjustSelection: (isRemoving, selStart, selEnd, lineStart) => {\n        // Get the current line to check if we're removing\n        const currentLine = textarea.value.slice(lineStart, textarea.selectionEnd)\n        const orderedListRegex = /^\\d+\\.\\s+/\n        const unorderedListRegex = /^- /\n        \n        // Check if we're removing a list\n        const hasOrderedList = orderedListRegex.test(currentLine)\n        const hasUnorderedList = unorderedListRegex.test(currentLine)\n        const isRemovingCurrent = (style.orderedList && hasOrderedList) || (style.unorderedList && hasUnorderedList)\n        \n        if (selStart === selEnd) {\n          // No selection - cursor position\n          if (isRemovingCurrent) {\n            // Removing list - adjust cursor back\n            const prefixMatch = currentLine.match(style.orderedList ? orderedListRegex : unorderedListRegex)\n            const prefixLength = prefixMatch ? prefixMatch[0].length : 0\n            return {\n              start: Math.max(selStart - prefixLength, lineStart),\n              end: Math.max(selStart - prefixLength, lineStart)\n            }\n          } else if (hasOrderedList || hasUnorderedList) {\n            // Converting from one list type to another\n            const oldPrefixMatch = currentLine.match(hasOrderedList ? orderedListRegex : unorderedListRegex)\n            const oldPrefixLength = oldPrefixMatch ? oldPrefixMatch[0].length : 0\n            const newPrefixLength = style.unorderedList ? 2 : 3 // \"- \" or \"1. \"\n            const adjustment = newPrefixLength - oldPrefixLength\n            return {\n              start: selStart + adjustment,\n              end: selStart + adjustment\n            }\n          } else {\n            // Adding new list\n            const prefixLength = style.unorderedList ? 2 : 3 // \"- \" or \"1. \"\n            return {\n              start: selStart + prefixLength,\n              end: selStart + prefixLength\n            }\n          }\n        } else {\n          // Has selection - preserve it\n          if (isRemovingCurrent) {\n            // Removing current list type\n            const prefixMatch = currentLine.match(style.orderedList ? orderedListRegex : unorderedListRegex)\n            const prefixLength = prefixMatch ? prefixMatch[0].length : 0\n            return {\n              start: Math.max(selStart - prefixLength, lineStart),\n              end: Math.max(selEnd - prefixLength, lineStart)\n            }\n          } else if (hasOrderedList || hasUnorderedList) {\n            // Converting from one list type to another\n            const oldPrefixMatch = currentLine.match(hasOrderedList ? orderedListRegex : unorderedListRegex)\n            const oldPrefixLength = oldPrefixMatch ? oldPrefixMatch[0].length : 0\n            const newPrefixLength = style.unorderedList ? 2 : 3 // \"- \" or \"1. \"\n            const adjustment = newPrefixLength - oldPrefixLength\n            return {\n              start: selStart + adjustment,\n              end: selEnd + adjustment\n            }\n          } else {\n            // Adding new list\n            const prefixLength = style.unorderedList ? 2 : 3 // \"- \" or \"1. \"\n            return {\n              start: selStart + prefixLength,\n              end: selEnd + prefixLength\n            }\n          }\n        }\n      }\n    }\n  )\n  \n  insertText(textarea, result)\n}", "/**\n * Format detection utilities\n */\n\nimport { FORMATS } from './formats.js'\n\n/**\n * Check if text has a specific format applied\n */\nfunction hasFormatApplied(text, format) {\n  if (!format.prefix) return false\n  \n  if (format.suffix) {\n    return text.startsWith(format.prefix) && text.endsWith(format.suffix)\n  } else {\n    return text.startsWith(format.prefix)\n  }\n}\n\n/**\n * Get active formats at cursor position\n */\nexport function getActiveFormats(textarea) {\n  if (!textarea) return []\n  \n  const formats = []\n  const { selectionStart, selectionEnd, value } = textarea\n  \n  // Get current line for line-based formats\n  const lines = value.split('\\n')\n  let lineStart = 0\n  let currentLine = ''\n  \n  for (const line of lines) {\n    if (selectionStart >= lineStart && selectionStart <= lineStart + line.length) {\n      currentLine = line\n      break\n    }\n    lineStart += line.length + 1\n  }\n  \n  // Check line-based formats\n  if (currentLine.startsWith('- ')) {\n    if (currentLine.startsWith('- [ ] ') || currentLine.startsWith('- [x] ')) {\n      formats.push('task-list')\n    } else {\n      formats.push('bullet-list')\n    }\n  }\n  \n  if (/^\\d+\\.\\s/.test(currentLine)) {\n    formats.push('numbered-list')\n  }\n  \n  if (currentLine.startsWith('> ')) {\n    formats.push('quote')\n  }\n  \n  if (currentLine.startsWith('# ')) formats.push('header')\n  if (currentLine.startsWith('## ')) formats.push('header-2')\n  if (currentLine.startsWith('### ')) formats.push('header-3')\n  \n  // Check inline formats by looking around cursor\n  const lookBehind = Math.max(0, selectionStart - 10)\n  const lookAhead = Math.min(value.length, selectionEnd + 10)\n  const surrounding = value.slice(lookBehind, lookAhead)\n  \n  // Check for bold\n  if (surrounding.includes('**')) {\n    const beforeCursor = value.slice(Math.max(0, selectionStart - 100), selectionStart)\n    const afterCursor = value.slice(selectionEnd, Math.min(value.length, selectionEnd + 100))\n    const lastOpenBold = beforeCursor.lastIndexOf('**')\n    const nextCloseBold = afterCursor.indexOf('**')\n    if (lastOpenBold !== -1 && nextCloseBold !== -1) {\n      formats.push('bold')\n    }\n  }\n  \n  // Check for italic\n  if (surrounding.includes('_')) {\n    const beforeCursor = value.slice(Math.max(0, selectionStart - 100), selectionStart)\n    const afterCursor = value.slice(selectionEnd, Math.min(value.length, selectionEnd + 100))\n    const lastOpenItalic = beforeCursor.lastIndexOf('_')\n    const nextCloseItalic = afterCursor.indexOf('_')\n    if (lastOpenItalic !== -1 && nextCloseItalic !== -1) {\n      formats.push('italic')\n    }\n  }\n  \n  // Check for code\n  if (surrounding.includes('`')) {\n    const beforeCursor = value.slice(Math.max(0, selectionStart - 100), selectionStart)\n    const afterCursor = value.slice(selectionEnd, Math.min(value.length, selectionEnd + 100))\n    if (beforeCursor.includes('`') && afterCursor.includes('`')) {\n      formats.push('code')\n    }\n  }\n  \n  // Check for link\n  if (surrounding.includes('[') && surrounding.includes(']')) {\n    const beforeCursor = value.slice(Math.max(0, selectionStart - 100), selectionStart)\n    const afterCursor = value.slice(selectionEnd, Math.min(value.length, selectionEnd + 100))\n    const lastOpenBracket = beforeCursor.lastIndexOf('[')\n    const nextCloseBracket = afterCursor.indexOf(']')\n    if (lastOpenBracket !== -1 && nextCloseBracket !== -1) {\n      const afterBracket = value.slice(selectionEnd + nextCloseBracket + 1, selectionEnd + nextCloseBracket + 10)\n      if (afterBracket.startsWith('(')) {\n        formats.push('link')\n      }\n    }\n  }\n  \n  return formats\n}\n\n/**\n * Check if specific format is active at cursor\n */\nexport function hasFormat(textarea, format) {\n  const activeFormats = getActiveFormats(textarea)\n  return activeFormats.includes(format)\n}\n\n/**\n * Expand selection based on options\n */\nexport function expandSelection(textarea, options = {}) {\n  if (!textarea) return\n  \n  const { toWord, toLine, toFormat } = options\n  const { selectionStart, selectionEnd, value } = textarea\n  \n  if (toLine) {\n    // Find line boundaries\n    const lines = value.split('\\n')\n    let lineStart = 0\n    let lineEnd = 0\n    let currentPos = 0\n    \n    for (const line of lines) {\n      if (selectionStart >= currentPos && selectionStart <= currentPos + line.length) {\n        lineStart = currentPos\n        lineEnd = currentPos + line.length\n        break\n      }\n      currentPos += line.length + 1\n    }\n    \n    textarea.selectionStart = lineStart\n    textarea.selectionEnd = lineEnd\n  } else if (toWord && selectionStart === selectionEnd) {\n    // Find word boundaries\n    let start = selectionStart\n    let end = selectionEnd\n    \n    // Move start back to word boundary\n    while (start > 0 && !/\\s/.test(value[start - 1])) {\n      start--\n    }\n    \n    // Move end forward to word boundary\n    while (end < value.length && !/\\s/.test(value[end])) {\n      end++\n    }\n    \n    textarea.selectionStart = start\n    textarea.selectionEnd = end\n  }\n}", "/**\n * markdown-actions - Lightweight markdown toolbar functionality\n * Based on GitHub's markdown-toolbar-element\n */\n\nimport { FORMATS, mergeWithDefaults } from './core/formats.js'\nimport { insertText, setUndoMethod } from './core/insertion.js'\nimport { preserveSelection, isMultipleLines, expandSelectionToLine, applyLineOperation } from './core/selection.js'\nimport { blockStyle, multilineStyle } from './operations/block.js'\nimport { applyListStyle } from './operations/list.js'\nimport { getActiveFormats as getActive, hasFormat as has, expandSelection as expand } from './core/detection.js'\nimport { debugLog, debugSelection, debugResult, setDebugMode, getDebugMode } from './debug.js'\n\n/**\n * Toggle bold formatting\n */\nexport function toggleBold(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  debugLog('toggleBold', 'Starting');\n  debugSelection(textarea, 'Before');\n  \n  const style = mergeWithDefaults(FORMATS.bold)\n  const result = blockStyle(textarea, style)\n  \n  debugResult(result);\n  \n  insertText(textarea, result)\n  \n  debugSelection(textarea, 'After');\n}\n\n/**\n * Toggle italic formatting\n */\nexport function toggleItalic(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  const style = mergeWithDefaults(FORMATS.italic)\n  const result = blockStyle(textarea, style)\n  insertText(textarea, result)\n}\n\n/**\n * Toggle code formatting\n */\nexport function toggleCode(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  // blockStyle already handles both inline and block code correctly\n  const style = mergeWithDefaults(FORMATS.code)\n  const result = blockStyle(textarea, style)\n  insertText(textarea, result)\n}\n\n/**\n * Insert or toggle link formatting\n */\nexport function insertLink(textarea, options = {}) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n  let style = mergeWithDefaults(FORMATS.link)\n  \n  // Check if selected text is a URL\n  const isURL = selectedText && selectedText.match(/^https?:\\/\\//)\n  \n  if (isURL && !options.url) {\n    // If selected text is a URL, use it as both link text and URL\n    style.suffix = `](${selectedText})`\n    style.replaceNext = ''\n    // Don't change the selected text, it becomes the link text\n  } else if (options.url) {\n    // Override with custom URL if provided\n    style.suffix = `](${options.url})`\n    style.replaceNext = ''\n  }\n  \n  // Override with custom text if provided\n  if (options.text && !selectedText) {\n    // Insert the text and select it\n    const pos = textarea.selectionStart\n    textarea.value = textarea.value.slice(0, pos) + options.text + textarea.value.slice(pos)\n    textarea.selectionStart = pos\n    textarea.selectionEnd = pos + options.text.length\n  }\n  \n  const result = blockStyle(textarea, style)\n  insertText(textarea, result)\n}\n\n/**\n * Toggle bullet list formatting\n */\nexport function toggleBulletList(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  const style = mergeWithDefaults(FORMATS.bulletList)\n  applyListStyle(textarea, style)\n}\n\n/**\n * Toggle numbered list formatting\n */\nexport function toggleNumberedList(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  const style = mergeWithDefaults(FORMATS.numberedList)\n  applyListStyle(textarea, style)\n}\n\n/**\n * Toggle quote formatting\n * Matches GitHub's implementation for quotes\n */\nexport function toggleQuote(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  debugLog('toggleQuote', 'Starting');\n  debugSelection(textarea, 'Initial');\n  \n  const style = mergeWithDefaults(FORMATS.quote)\n  \n  // Use the reusable line operation helper\n  const result = applyLineOperation(\n    textarea,\n    (ta) => multilineStyle(ta, style),\n    { prefix: style.prefix }\n  )\n  \n  debugResult(result);\n  insertText(textarea, result)\n  debugSelection(textarea, 'Final');\n}\n\n/**\n * Toggle task list formatting\n * Matches GitHub's implementation for task lists\n */\nexport function toggleTaskList(textarea) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  const style = mergeWithDefaults(FORMATS.taskList)\n  \n  // Use the reusable line operation helper\n  const result = applyLineOperation(\n    textarea,\n    (ta) => multilineStyle(ta, style),\n    { prefix: style.prefix }\n  )\n  \n  insertText(textarea, result)\n}\n\n/**\n * Insert or toggle header with specific level\n */\nexport function insertHeader(textarea, level = 1, toggle = false) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  if (level < 1 || level > 6) level = 1\n  \n  debugLog('insertHeader', `============ START ============`);\n  debugLog('insertHeader', `Level: ${level}, Toggle: ${toggle}`);\n  debugLog('insertHeader', `Initial cursor: ${textarea.selectionStart}-${textarea.selectionEnd}`);\n  \n  const headerKey = `header${level === 1 ? '1' : level}`\n  const style = mergeWithDefaults(FORMATS[headerKey] || FORMATS.header1)\n  debugLog('insertHeader', `Style prefix: \"${style.prefix}\"`);\n  \n  // Save original positions and get line info BEFORE applyLineOperation\n  const value = textarea.value\n  const originalStart = textarea.selectionStart\n  const originalEnd = textarea.selectionEnd\n  \n  // Find the current line boundaries to check existing header\n  let lineStart = originalStart\n  while (lineStart > 0 && value[lineStart - 1] !== '\\n') {\n    lineStart--\n  }\n  let lineEnd = originalEnd\n  while (lineEnd < value.length && value[lineEnd] !== '\\n') {\n    lineEnd++\n  }\n  \n  // Get current line and check for existing header\n  const currentLineContent = value.slice(lineStart, lineEnd)\n  debugLog('insertHeader', `Current line (before): \"${currentLineContent}\"`);\n  \n  const existingHeaderMatch = currentLineContent.match(/^(#{1,6})\\s*/)\n  const existingLevel = existingHeaderMatch ? existingHeaderMatch[1].length : 0\n  const existingPrefixLength = existingHeaderMatch ? existingHeaderMatch[0].length : 0\n  \n  debugLog('insertHeader', `Existing header check:`);\n  debugLog('insertHeader', `  - Match: ${existingHeaderMatch ? `\"${existingHeaderMatch[0]}\"` : 'none'}`);\n  debugLog('insertHeader', `  - Existing level: ${existingLevel}`);\n  debugLog('insertHeader', `  - Existing prefix length: ${existingPrefixLength}`);\n  debugLog('insertHeader', `  - Target level: ${level}`);\n  \n  // Determine if we're toggling off\n  const shouldToggleOff = toggle && existingLevel === level\n  debugLog('insertHeader', `Should toggle OFF: ${shouldToggleOff} (toggle=${toggle}, existingLevel=${existingLevel}, level=${level})`);\n  \n  // Use applyLineOperation for consistent behavior\n  const result = applyLineOperation(\n    textarea,\n    (ta) => {\n      const currentLine = ta.value.slice(ta.selectionStart, ta.selectionEnd)\n      debugLog('insertHeader', `Line in operation: \"${currentLine}\"`);\n      \n      // Remove any existing header formatting\n      const cleanedLine = currentLine.replace(/^#{1,6}\\s*/, '')\n      debugLog('insertHeader', `Cleaned line: \"${cleanedLine}\"`);\n      \n      let newLine\n      \n      if (shouldToggleOff) {\n        // Toggle off - just use the cleaned line\n        debugLog('insertHeader', 'ACTION: Toggling OFF - removing header');\n        newLine = cleanedLine\n      } else if (existingLevel > 0) {\n        // Replace existing header with new one\n        debugLog('insertHeader', `ACTION: Replacing H${existingLevel} with H${level}`);\n        newLine = style.prefix + cleanedLine\n      } else {\n        // Add new header\n        debugLog('insertHeader', 'ACTION: Adding new header');\n        newLine = style.prefix + cleanedLine\n      }\n      \n      debugLog('insertHeader', `New line: \"${newLine}\"`);\n      \n      return {\n        text: newLine,\n        selectionStart: ta.selectionStart,\n        selectionEnd: ta.selectionEnd\n      }\n    },\n    {\n      prefix: style.prefix,\n      // Custom selection adjustment for headers\n      adjustSelection: (isRemoving, selStart, selEnd, lineStartPos) => {\n        debugLog('insertHeader', `Adjusting selection:`);\n        debugLog('insertHeader', `  - isRemoving param: ${isRemoving}`);\n        debugLog('insertHeader', `  - shouldToggleOff: ${shouldToggleOff}`);\n        debugLog('insertHeader', `  - selStart: ${selStart}, selEnd: ${selEnd}`);\n        debugLog('insertHeader', `  - lineStartPos: ${lineStartPos}`);\n        \n        if (shouldToggleOff) {\n          // Removing the header entirely\n          const adjustment = Math.max(selStart - existingPrefixLength, lineStartPos)\n          debugLog('insertHeader', `  - Removing header, adjusting by -${existingPrefixLength}`);\n          return {\n            start: adjustment,\n            end: selStart === selEnd ? adjustment : Math.max(selEnd - existingPrefixLength, lineStartPos)\n          }\n        } else if (existingPrefixLength > 0) {\n          // Replacing existing header with new one\n          const prefixDiff = style.prefix.length - existingPrefixLength\n          debugLog('insertHeader', `  - Replacing header, adjusting by ${prefixDiff}`);\n          return {\n            start: selStart + prefixDiff,\n            end: selEnd + prefixDiff\n          }\n        } else {\n          // Adding new header\n          debugLog('insertHeader', `  - Adding header, adjusting by +${style.prefix.length}`);\n          return {\n            start: selStart + style.prefix.length,\n            end: selEnd + style.prefix.length\n          }\n        }\n      }\n    }\n  )\n  \n  debugLog('insertHeader', `Final result: text=\"${result.text}\", cursor=${result.selectionStart}-${result.selectionEnd}`);\n  debugLog('insertHeader', `============ END ============`);\n  \n  insertText(textarea, result)\n}\n\n/**\n * Toggle H1 header\n */\nexport function toggleH1(textarea) {\n  insertHeader(textarea, 1, true)\n}\n\n/**\n * Toggle H2 header\n */\nexport function toggleH2(textarea) {\n  insertHeader(textarea, 2, true)\n}\n\n/**\n * Toggle H3 header\n */\nexport function toggleH3(textarea) {\n  insertHeader(textarea, 3, true)\n}\n\n/**\n * Get active formats at cursor position\n */\nexport function getActiveFormats(textarea) {\n  return getActive(textarea)\n}\n\n/**\n * Check if format is active at cursor\n */\nexport function hasFormat(textarea, format) {\n  return has(textarea, format)\n}\n\n/**\n * Expand selection based on options\n */\nexport function expandSelection(textarea, options = {}) {\n  expand(textarea, options)\n}\n\n/**\n * Apply custom format\n */\nexport function applyCustomFormat(textarea, format) {\n  if (!textarea || textarea.disabled || textarea.readOnly) return\n  \n  const style = mergeWithDefaults(format)\n  let result\n  \n  if (style.multiline) {\n    const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd)\n    if (isMultipleLines(selectedText)) {\n      result = multilineStyle(textarea, style)\n    } else {\n      result = blockStyle(textarea, style)\n    }\n  } else {\n    result = blockStyle(textarea, style)\n  }\n  \n  insertText(textarea, result)\n}\n\n/**\n * Preserve selection during callback\n */\nexport { preserveSelection }\n\n/**\n * Configure undo method\n */\nexport { setUndoMethod }\n\n/**\n * Debug mode control\n */\nexport { setDebugMode, getDebugMode }\n\n/**\n * Default export with all functions\n */\nexport default {\n  toggleBold,\n  toggleItalic,\n  toggleCode,\n  insertLink,\n  toggleBulletList,\n  toggleNumberedList,\n  toggleQuote,\n  toggleTaskList,\n  insertHeader,\n  toggleH1,\n  toggleH2,\n  toggleH3,\n  getActiveFormats,\n  hasFormat,\n  expandSelection,\n  applyCustomFormat,\n  preserveSelection,\n  setUndoMethod,\n  setDebugMode,\n  getDebugMode\n}", "/**\n * Keyboard shortcuts handler for OverType editor\n * Uses the same handleAction method as toolbar for consistency\n */\n\nimport * as markdownActions from 'markdown-actions';\n\n/**\n * ShortcutsManager - Handles keyboard shortcuts for the editor\n */\nexport class ShortcutsManager {\n  constructor(editor) {\n    this.editor = editor;\n    this.textarea = editor.textarea;\n    // No need to add our own listener - OverType will call handleKeydown\n  }\n\n  /**\n   * Handle keydown events - called by OverType\n   * @param {KeyboardEvent} event - The keyboard event\n   * @returns {boolean} Whether the event was handled\n   */\n  handleKeydown(event) {\n    const isMac = navigator.platform.toLowerCase().includes('mac');\n    const modKey = isMac ? event.metaKey : event.ctrlKey;\n\n    if (!modKey) return false;\n\n    let action = null;\n\n    // Map keyboard shortcuts to toolbar actions\n    switch(event.key.toLowerCase()) {\n      case 'b':\n        if (!event.shiftKey) {\n          action = 'toggleBold';\n        }\n        break;\n\n      case 'i':\n        if (!event.shiftKey) {\n          action = 'toggleItalic';\n        }\n        break;\n\n      case 'k':\n        if (!event.shiftKey) {\n          action = 'insertLink';\n        }\n        break;\n\n      case '7':\n        if (event.shiftKey) {\n          action = 'toggleNumberedList';\n        }\n        break;\n\n      case '8':\n        if (event.shiftKey) {\n          action = 'toggleBulletList';\n        }\n        break;\n    }\n\n    // If we have an action, handle it exactly like the toolbar does\n    if (action) {\n      event.preventDefault();\n      \n      // If toolbar exists, use its handleAction method (exact same code path)\n      if (this.editor.toolbar) {\n        this.editor.toolbar.handleAction(action);\n      } else {\n        // Fallback: duplicate the toolbar's handleAction logic\n        this.handleAction(action);\n      }\n      \n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handle action - fallback when no toolbar exists\n   * This duplicates toolbar.handleAction for consistency\n   */\n  async handleAction(action) {\n    const textarea = this.textarea;\n    if (!textarea) return;\n\n    // Focus textarea\n    textarea.focus();\n    \n    try {\n      switch (action) {\n        case 'toggleBold':\n          markdownActions.toggleBold(textarea);\n          break;\n        case 'toggleItalic':\n          markdownActions.toggleItalic(textarea);\n          break;\n        case 'insertLink':\n          markdownActions.insertLink(textarea);\n          break;\n        case 'toggleBulletList':\n          markdownActions.toggleBulletList(textarea);\n          break;\n        case 'toggleNumberedList':\n          markdownActions.toggleNumberedList(textarea);\n          break;\n      }\n\n      // Trigger input event to update preview\n      textarea.dispatchEvent(new Event('input', { bubbles: true }));\n    } catch (error) {\n      console.error('Error in markdown action:', error);\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  destroy() {\n    // Nothing to clean up since we don't add our own listener\n  }\n}", "/**\n * Built-in themes for OverType editor\n * Each theme provides a complete color palette for the editor\n */\n\n/**\n * Solar theme - Light, warm and bright\n */\nexport const solar = {\n  name: 'solar',\n  colors: {\n    bgPrimary: '#faf0ca',        // Lemon Chiffon - main background\n    bgSecondary: '#ffffff',      // White - editor background\n    text: '#0d3b66',             // Yale Blue - main text\n    h1: '#f95738',               // Tomato - h1 headers\n    h2: '#ee964b',               // Sandy Brown - h2 headers  \n    h3: '#3d8a51',               // Forest green - h3 headers\n    strong: '#ee964b',           // Sandy Brown - bold text\n    em: '#f95738',               // Tomato - italic text\n    link: '#0d3b66',             // Yale Blue - links\n    code: '#0d3b66',             // Yale Blue - inline code\n    codeBg: 'rgba(244, 211, 94, 0.4)', // Naples Yellow with transparency\n    blockquote: '#5a7a9b',       // Muted blue - blockquotes\n    hr: '#5a7a9b',               // Muted blue - horizontal rules\n    syntaxMarker: 'rgba(13, 59, 102, 0.52)', // Yale Blue with transparency\n    cursor: '#f95738',           // Tomato - cursor\n    selection: 'rgba(244, 211, 94, 0.4)', // Naples Yellow with transparency\n    listMarker: '#ee964b',       // Sandy Brown - list markers\n    // Toolbar colors\n    toolbarBg: '#ffffff',        // White - toolbar background\n    toolbarBorder: 'rgba(13, 59, 102, 0.15)', // Yale Blue border\n    toolbarIcon: '#0d3b66',      // Yale Blue - icon color\n    toolbarHover: '#f5f5f5',     // Light gray - hover background\n    toolbarActive: '#faf0ca',    // Lemon Chiffon - active button background\n  }\n};\n\n/**\n * Cave theme - Dark ocean depths\n */\nexport const cave = {\n  name: 'cave',\n  colors: {\n    bgPrimary: '#141E26',        // Deep ocean - main background\n    bgSecondary: '#1D2D3E',      // Darker charcoal - editor background\n    text: '#c5dde8',             // Light blue-gray - main text\n    h1: '#d4a5ff',               // Rich lavender - h1 headers\n    h2: '#f6ae2d',               // Hunyadi Yellow - h2 headers\n    h3: '#9fcfec',               // Brighter blue - h3 headers\n    strong: '#f6ae2d',           // Hunyadi Yellow - bold text\n    em: '#9fcfec',               // Brighter blue - italic text\n    link: '#9fcfec',             // Brighter blue - links\n    code: '#c5dde8',             // Light blue-gray - inline code\n    codeBg: '#1a232b',           // Very dark blue - code background\n    blockquote: '#9fcfec',       // Brighter blue - same as italic\n    hr: '#c5dde8',               // Light blue-gray - horizontal rules\n    syntaxMarker: 'rgba(159, 207, 236, 0.73)', // Brighter blue semi-transparent\n    cursor: '#f26419',           // Orange Pantone - cursor\n    selection: 'rgba(51, 101, 138, 0.4)', // Lapis Lazuli with transparency\n    listMarker: '#f6ae2d',       // Hunyadi Yellow - list markers\n    // Toolbar colors for dark theme\n    toolbarBg: '#1D2D3E',        // Darker charcoal - toolbar background\n    toolbarBorder: 'rgba(197, 221, 232, 0.1)', // Light blue-gray border\n    toolbarIcon: '#c5dde8',      // Light blue-gray - icon color\n    toolbarHover: '#243546',     // Slightly lighter charcoal - hover background\n    toolbarActive: '#2a3f52',    // Even lighter - active button background\n  }\n};\n\n/**\n * Default themes registry\n */\nexport const themes = {\n  solar,\n  cave,\n  // Aliases for backward compatibility\n  light: solar,\n  dark: cave\n};\n\n/**\n * Get theme by name or return custom theme object\n * @param {string|Object} theme - Theme name or custom theme object\n * @returns {Object} Theme configuration\n */\nexport function getTheme(theme) {\n  if (typeof theme === 'string') {\n    const themeObj = themes[theme] || themes.solar;\n    // Preserve the requested theme name (important for 'light' and 'dark' aliases)\n    return { ...themeObj, name: theme };\n  }\n  return theme;\n}\n\n/**\n * Apply theme colors to CSS variables\n * @param {Object} colors - Theme colors object\n * @returns {string} CSS custom properties string\n */\nexport function themeToCSSVars(colors) {\n  const vars = [];\n  for (const [key, value] of Object.entries(colors)) {\n    // Convert camelCase to kebab-case\n    const varName = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n    vars.push(`--${varName}: ${value};`);\n  }\n  return vars.join('\\n');\n}\n\n/**\n * Merge custom colors with base theme\n * @param {Object} baseTheme - Base theme object\n * @param {Object} customColors - Custom color overrides\n * @returns {Object} Merged theme object\n */\nexport function mergeTheme(baseTheme, customColors = {}) {\n  return {\n    ...baseTheme,\n    colors: {\n      ...baseTheme.colors,\n      ...customColors\n    }\n  };\n}", "/**\n * CSS styles for OverType editor\n * Embedded in JavaScript to ensure single-file distribution\n */\n\nimport { themeToCSSVars } from './themes.js';\n\n/**\n * Generate the complete CSS for the editor\n * @param {Object} options - Configuration options\n * @returns {string} Complete CSS string\n */\nexport function generateStyles(options = {}) {\n  const {\n    fontSize = '14px',\n    lineHeight = 1.6,\n    fontFamily = \"ui-monospace, 'SFMono-Regular', 'Menlo', 'Consolas', 'Liberation Mono', monospace\",\n    padding = '20px',\n    theme = null,\n    mobile = {}\n  } = options;\n\n  // Generate mobile overrides\n  const mobileStyles = Object.keys(mobile).length > 0 ? `\n    @media (max-width: 640px) {\n      .overtype-wrapper .overtype-input,\n      .overtype-wrapper .overtype-preview {\n        ${Object.entries(mobile)\n          .map(([prop, val]) => {\n            const cssProp = prop.replace(/([A-Z])/g, '-$1').toLowerCase();\n            return `${cssProp}: ${val} !important;`;\n          })\n          .join('\\n        ')}\n      }\n    }\n  ` : '';\n\n  // Generate theme variables if provided\n  const themeVars = theme && theme.colors ? themeToCSSVars(theme.colors) : '';\n\n  return `\n    /* OverType Editor Styles */\n    .overtype-container {\n      position: relative !important;\n      width: 100% !important;\n      height: 100% !important;\n      ${themeVars ? `\n      /* Theme Variables */\n      ${themeVars}` : ''}\n    }\n    \n    .overtype-wrapper {\n      position: relative !important;\n      width: 100% !important;\n      height: 100% !important;\n      overflow: hidden !important;\n      background: var(--bg-secondary, #ffffff) !important;\n    }\n\n    /* Critical alignment styles - must be identical for both layers */\n    .overtype-wrapper .overtype-input,\n    .overtype-wrapper .overtype-preview {\n      /* Positioning - must be identical */\n      position: absolute !important;\n      top: 0 !important;\n      left: 0 !important;\n      width: 100% !important;\n      height: 100% !important;\n      \n      /* Font properties - any difference breaks alignment */\n      font-family: ${fontFamily} !important;\n      font-size: var(--instance-font-size, ${fontSize}) !important;\n      line-height: var(--instance-line-height, ${lineHeight}) !important;\n      font-weight: normal !important;\n      font-style: normal !important;\n      font-variant: normal !important;\n      font-stretch: normal !important;\n      font-kerning: none !important;\n      font-feature-settings: normal !important;\n      \n      /* Box model - must match exactly */\n      padding: var(--instance-padding, ${padding}) !important;\n      margin: 0 !important;\n      border: none !important;\n      outline: none !important;\n      box-sizing: border-box !important;\n      \n      /* Text layout - critical for character positioning */\n      white-space: pre-wrap !important;\n      word-wrap: break-word !important;\n      word-break: normal !important;\n      overflow-wrap: break-word !important;\n      tab-size: 2 !important;\n      -moz-tab-size: 2 !important;\n      text-align: left !important;\n      text-indent: 0 !important;\n      letter-spacing: normal !important;\n      word-spacing: normal !important;\n      \n      /* Text rendering */\n      text-transform: none !important;\n      text-rendering: auto !important;\n      -webkit-font-smoothing: auto !important;\n      -webkit-text-size-adjust: 100% !important;\n      \n      /* Direction and writing */\n      direction: ltr !important;\n      writing-mode: horizontal-tb !important;\n      unicode-bidi: normal !important;\n      text-orientation: mixed !important;\n      \n      /* Visual effects that could shift perception */\n      text-shadow: none !important;\n      filter: none !important;\n      transform: none !important;\n      zoom: 1 !important;\n      \n      /* Vertical alignment */\n      vertical-align: baseline !important;\n      \n      /* Size constraints */\n      min-width: 0 !important;\n      min-height: 0 !important;\n      max-width: none !important;\n      max-height: none !important;\n      \n      /* Overflow */\n      overflow-y: auto !important;\n      overflow-x: auto !important;\n      scrollbar-width: auto !important;\n      scrollbar-gutter: auto !important;\n      \n      /* Animation/transition - disabled to prevent movement */\n      animation: none !important;\n      transition: none !important;\n    }\n\n    /* Input layer styles */\n    .overtype-wrapper .overtype-input {\n      /* Layer positioning */\n      z-index: 1 !important;\n      \n      /* Text visibility */\n      color: transparent !important;\n      caret-color: var(--cursor, #f95738) !important;\n      background-color: transparent !important;\n      \n      /* Textarea-specific */\n      resize: none !important;\n      appearance: none !important;\n      -webkit-appearance: none !important;\n      -moz-appearance: none !important;\n      \n      /* Prevent mobile zoom on focus */\n      touch-action: manipulation !important;\n      \n      /* Disable autofill and spellcheck */\n      autocomplete: off !important;\n      autocorrect: off !important;\n      autocapitalize: off !important;\n      spellcheck: false !important;\n    }\n\n    .overtype-wrapper .overtype-input::selection {\n      background-color: var(--selection, rgba(244, 211, 94, 0.4));\n    }\n\n    /* Preview layer styles */\n    .overtype-wrapper .overtype-preview {\n      /* Layer positioning */\n      z-index: 0 !important;\n      pointer-events: none !important;\n      color: var(--text, #0d3b66) !important;\n      background-color: transparent !important;\n      \n      /* Prevent text selection */\n      user-select: none !important;\n      -webkit-user-select: none !important;\n      -moz-user-select: none !important;\n      -ms-user-select: none !important;\n    }\n\n    /* Defensive styles for preview child divs */\n    .overtype-wrapper .overtype-preview div {\n      /* Reset any inherited styles */\n      margin: 0 !important;\n      padding: 0 !important;\n      border: none !important;\n      text-align: left !important;\n      text-indent: 0 !important;\n      display: block !important;\n      position: static !important;\n      transform: none !important;\n      min-height: 0 !important;\n      max-height: none !important;\n      line-height: inherit !important;\n      font-size: inherit !important;\n      font-family: inherit !important;\n    }\n\n    /* Markdown element styling - NO SIZE CHANGES */\n    .overtype-wrapper .overtype-preview .header {\n      font-weight: bold !important;\n    }\n\n    /* Header colors */\n    .overtype-wrapper .overtype-preview .h1 { \n      color: var(--h1, #f95738) !important; \n    }\n    .overtype-wrapper .overtype-preview .h2 { \n      color: var(--h2, #ee964b) !important; \n    }\n    .overtype-wrapper .overtype-preview .h3 { \n      color: var(--h3, #3d8a51) !important; \n    }\n\n    /* Bold text */\n    .overtype-wrapper .overtype-preview strong {\n      color: var(--strong, #ee964b) !important;\n      font-weight: bold !important;\n    }\n\n    /* Italic text */\n    .overtype-wrapper .overtype-preview em {\n      color: var(--em, #f95738) !important;\n      text-decoration-color: var(--em, #f95738) !important;\n      text-decoration-thickness: 1px !important;\n      font-style: italic !important;\n    }\n\n    /* Inline code */\n    .overtype-wrapper .overtype-preview code {\n      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;\n      color: var(--code, #0d3b66) !important;\n      padding: 0 !important;\n      border-radius: 2px !important;\n      font-family: inherit !important;\n      font-size: inherit !important;\n      line-height: inherit !important;\n      font-weight: normal !important;\n    }\n\n    /* Code blocks */\n    .overtype-wrapper .overtype-preview pre {\n      background: #1e1e1e !important;\n      padding: 0 !important;\n      margin: 0 !important;\n      border-radius: 4px !important;\n      overflow-x: auto !important;\n    }\n\n    .overtype-wrapper .overtype-preview pre code {\n      background: none !important;\n    }\n\n    /* Blockquotes */\n    .overtype-wrapper .overtype-preview .blockquote {\n      color: var(--blockquote, #5a7a9b) !important;\n      padding: 0 !important;\n      margin: 0 !important;\n      border: none !important;\n    }\n\n    /* Links */\n    .overtype-wrapper .overtype-preview a {\n      color: var(--link, #0d3b66) !important;\n      text-decoration: underline !important;\n      font-weight: normal !important;\n    }\n\n    .overtype-wrapper .overtype-preview a:hover {\n      text-decoration: underline !important;\n      color: var(--link, #0d3b66) !important;\n    }\n\n    /* Lists - no list styling */\n    .overtype-wrapper .overtype-preview ul,\n    .overtype-wrapper .overtype-preview ol {\n      list-style: none !important;\n      margin: 0 !important;\n      padding: 0 !important;\n    }\n\n    .overtype-wrapper .overtype-preview li {\n      margin: 0 !important;\n      padding: 0 !important;\n      list-style: none !important;\n    }\n\n    /* Horizontal rules */\n    .overtype-wrapper .overtype-preview hr {\n      border: none !important;\n      color: var(--hr, #5a7a9b) !important;\n      margin: 0 !important;\n      padding: 0 !important;\n    }\n\n    .overtype-wrapper .overtype-preview .hr-marker {\n      color: var(--hr, #5a7a9b) !important;\n      opacity: 0.6 !important;\n    }\n\n    /* Code fence markers - with background when not in code block */\n    .overtype-wrapper .overtype-preview .code-fence {\n      color: var(--code, #0d3b66) !important;\n      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;\n    }\n    \n    /* Code block lines - background for entire code block */\n    .overtype-wrapper .overtype-preview .code-block-line {\n      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;\n    }\n    \n    /* Remove background from code fence when inside code block line */\n    .overtype-wrapper .overtype-preview .code-block-line .code-fence {\n      background: transparent !important;\n    }\n\n    /* Raw markdown line */\n    .overtype-wrapper .overtype-preview .raw-line {\n      color: var(--raw-line, #5a7a9b) !important;\n      font-style: normal !important;\n      font-weight: normal !important;\n    }\n\n    /* Syntax markers */\n    .overtype-wrapper .overtype-preview .syntax-marker {\n      color: var(--syntax-marker, rgba(13, 59, 102, 0.52)) !important;\n      opacity: 0.7 !important;\n    }\n\n    /* List markers */\n    .overtype-wrapper .overtype-preview .list-marker {\n      color: var(--list-marker, #ee964b) !important;\n    }\n\n    /* Stats bar */\n    .overtype-wrapper.with-stats {\n      padding-bottom: 40px !important;\n    }\n    \n    .overtype-wrapper .overtype-stats {\n      position: absolute !important;\n      bottom: 0 !important;\n      left: 0 !important;\n      right: 0 !important;\n      height: 40px !important;\n      padding: 0 20px !important;\n      background: #f8f9fa !important;\n      border-top: 1px solid #e0e0e0 !important;\n      display: flex !important;\n      justify-content: space-between !important;\n      align-items: center !important;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n      font-size: 0.85rem !important;\n      color: #666 !important;\n      z-index: 2 !important;\n    }\n    \n    /* Dark theme stats bar */\n    .overtype-wrapper[data-theme=\"cave\"] .overtype-stats {\n      background: var(--bg-secondary, #1D2D3E) !important;\n      border-top: 1px solid rgba(197, 221, 232, 0.1) !important;\n      color: var(--text, #c5dde8) !important;\n    }\n    \n    .overtype-wrapper .overtype-stats .overtype-stat {\n      display: flex !important;\n      align-items: center !important;\n      gap: 5px !important;\n      white-space: nowrap !important;\n    }\n    \n    .overtype-wrapper .overtype-stats .live-dot {\n      width: 8px !important;\n      height: 8px !important;\n      background: #4caf50 !important;\n      border-radius: 50% !important;\n      animation: pulse 2s infinite !important;\n    }\n    \n    @keyframes pulse {\n      0%, 100% { opacity: 1; transform: scale(1); }\n      50% { opacity: 0.6; transform: scale(1.2); }\n    }\n    \n    /* Adjust textarea and preview for stats bar */\n    .overtype-wrapper.with-stats .overtype-input,\n    .overtype-wrapper.with-stats .overtype-preview {\n      height: calc(100% - 40px) !important;\n    }\n\n    /* Toolbar Styles */\n    .overtype-toolbar {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      padding: 8px;\n      background: var(--toolbar-bg, var(--bg-primary, #f8f9fa));\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n\n    .overtype-toolbar-button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 32px;\n      height: 32px;\n      padding: 0;\n      border: none;\n      border-radius: 6px;\n      background: transparent;\n      color: var(--toolbar-icon, var(--text-secondary, #666));\n      cursor: pointer;\n      transition: all 0.2s ease;\n      flex-shrink: 0;\n    }\n\n    .overtype-toolbar-button svg {\n      width: 20px;\n      height: 20px;\n      fill: currentColor;\n    }\n\n    .overtype-toolbar-button:hover {\n      background: var(--toolbar-hover, var(--bg-secondary, #e9ecef));\n      color: var(--toolbar-icon, var(--text-primary, #333));\n    }\n\n    .overtype-toolbar-button:active {\n      transform: scale(0.95);\n    }\n\n    .overtype-toolbar-button.active {\n      background: var(--toolbar-active, var(--primary, #007bff));\n      color: var(--toolbar-icon, var(--text-primary, #333));\n    }\n\n    .overtype-toolbar-button:disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    .overtype-toolbar-separator {\n      width: 1px;\n      height: 24px;\n      background: var(--border, #e0e0e0);\n      margin: 0 4px;\n      flex-shrink: 0;\n    }\n\n    /* Adjust wrapper when toolbar is present */\n    .overtype-container .overtype-toolbar + .overtype-wrapper {\n    }\n\n    /* Mobile toolbar adjustments */\n    @media (max-width: 640px) {\n      .overtype-toolbar {\n        padding: 6px;\n        gap: 2px;\n      }\n\n      .overtype-toolbar-button {\n        width: 36px;\n        height: 36px;\n      }\n\n      .overtype-toolbar-separator {\n        margin: 0 2px;\n      }\n    }\n\n    ${mobileStyles}\n  `;\n}", "/**\n * SVG icons for OverType toolbar\n * Quill-style icons with inline styles\n */\n\nexport const boldIcon = `<svg viewBox=\"0 0 18 18\">\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z\"></path>\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z\"></path>\n</svg>`;\n\nexport const italicIcon = `<svg viewBox=\"0 0 18 18\">\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"7\" x2=\"13\" y1=\"4\" y2=\"4\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"5\" x2=\"11\" y1=\"14\" y2=\"14\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"8\" x2=\"10\" y1=\"14\" y2=\"4\"></line>\n</svg>`;\n\nexport const h1Icon = `<svg viewBox=\"0 0 18 18\">\n  <path fill=\"currentColor\" d=\"M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z\"></path>\n</svg>`;\n\nexport const h2Icon = `<svg viewBox=\"0 0 18 18\">\n  <path fill=\"currentColor\" d=\"M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z\"></path>\n</svg>`;\n\nexport const h3Icon = `<svg viewBox=\"0 0 18 18\">\n  <path fill=\"currentColor\" d=\"M16.65186,12.30664a2.6742,2.6742,0,0,1-2.915,2.68457,3.96592,3.96592,0,0,1-2.25537-.6709.56007.56007,0,0,1-.13232-.83594L11.64648,13c.209-.34082.48389-.36328.82471-.1543a2.32654,2.32654,0,0,0,1.12256.33008c.71484,0,1.12207-.35156,1.12207-.78125,0-.61523-.61621-.86816-1.46338-.86816H13.2085a.65159.65159,0,0,1-.68213-.41895l-.05518-.10937a.67114.67114,0,0,1,.14307-.78125l.71533-.86914a8.55289,8.55289,0,0,1,.68213-.7373V8.58887a3.93913,3.93913,0,0,1-.748.05469H11.9873a.54085.54085,0,0,1-.605-.60547V7.59863a.54085.54085,0,0,1,.605-.60547h3.75146a.53773.53773,0,0,1,.60547.59375v.17676a1.03723,1.03723,0,0,1-.27539.748L14.74854,10.0293A2.31132,2.31132,0,0,1,16.65186,12.30664ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z\"></path>\n</svg>`;\n\nexport const linkIcon = `<svg viewBox=\"0 0 18 18\">\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"7\" x2=\"11\" y1=\"7\" y2=\"11\"></line>\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z\"></path>\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z\"></path>\n</svg>`;\n\nexport const codeIcon = `<svg viewBox=\"0 0 18 18\">\n  <polyline stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" points=\"5 7 3 9 5 11\"></polyline>\n  <polyline stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" points=\"13 7 15 9 13 11\"></polyline>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"10\" x2=\"8\" y1=\"5\" y2=\"13\"></line>\n</svg>`;\n\n\nexport const bulletListIcon = `<svg viewBox=\"0 0 18 18\">\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"6\" x2=\"15\" y1=\"4\" y2=\"4\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"6\" x2=\"15\" y1=\"9\" y2=\"9\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"6\" x2=\"15\" y1=\"14\" y2=\"14\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"3\" x2=\"3\" y1=\"4\" y2=\"4\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"3\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"3\" x2=\"3\" y1=\"14\" y2=\"14\"></line>\n</svg>`;\n\nexport const orderedListIcon = `<svg viewBox=\"0 0 18 18\">\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"7\" x2=\"15\" y1=\"4\" y2=\"4\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"7\" x2=\"15\" y1=\"9\" y2=\"9\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"7\" x2=\"15\" y1=\"14\" y2=\"14\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" x1=\"2.5\" x2=\"4.5\" y1=\"5.5\" y2=\"5.5\"></line>\n  <path fill=\"currentColor\" d=\"M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z\"></path>\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156\"></path>\n  <path stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109\"></path>\n</svg>`;\n\nexport const quoteIcon = `<svg viewBox=\"2 2 20 20\">\n  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 10.8182L9 10.8182C8.80222 10.8182 8.60888 10.7649 8.44443 10.665C8.27998 10.5651 8.15181 10.4231 8.07612 10.257C8.00043 10.0909 7.98063 9.90808 8.01922 9.73174C8.0578 9.55539 8.15304 9.39341 8.29289 9.26627C8.43275 9.13913 8.61093 9.05255 8.80491 9.01747C8.99889 8.98239 9.19996 9.00039 9.38268 9.0692C9.56541 9.13801 9.72159 9.25453 9.83147 9.40403C9.94135 9.55353 10 9.72929 10 9.90909L10 12.1818C10 12.664 9.78929 13.1265 9.41421 13.4675C9.03914 13.8084 8.53043 14 8 14\"></path>\n  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 10.8182L15 10.8182C14.8022 10.8182 14.6089 10.7649 14.4444 10.665C14.28 10.5651 14.1518 10.4231 14.0761 10.257C14.0004 10.0909 13.9806 9.90808 14.0192 9.73174C14.0578 9.55539 14.153 9.39341 14.2929 9.26627C14.4327 9.13913 14.6109 9.05255 14.8049 9.01747C14.9989 8.98239 15.2 9.00039 15.3827 9.0692C15.5654 9.13801 15.7216 9.25453 15.8315 9.40403C15.9414 9.55353 16 9.72929 16 9.90909L16 12.1818C16 12.664 15.7893 13.1265 15.4142 13.4675C15.0391 13.8084 14.5304 14 14 14\"></path>\n</svg>`;\n\nexport const taskListIcon = `<svg viewBox=\"0 0 18 18\">\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"8\" x2=\"16\" y1=\"4\" y2=\"4\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"8\" x2=\"16\" y1=\"9\" y2=\"9\"></line>\n  <line stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"8\" x2=\"16\" y1=\"14\" y2=\"14\"></line>\n  <rect stroke=\"currentColor\" fill=\"none\" stroke-width=\"1.5\" x=\"2\" y=\"3\" width=\"3\" height=\"3\" rx=\"0.5\"></rect>\n  <rect stroke=\"currentColor\" fill=\"none\" stroke-width=\"1.5\" x=\"2\" y=\"13\" width=\"3\" height=\"3\" rx=\"0.5\"></rect>\n  <polyline stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" points=\"2.65 9.5 3.5 10.5 5 8.5\"></polyline>\n</svg>`;", "/**\n * Toolbar component for OverType editor\n * Provides markdown formatting buttons with icons\n */\n\nimport * as icons from './icons.js';\nimport * as markdownActions from 'markdown-actions';\n\nexport class Toolbar {\n  constructor(editor) {\n    this.editor = editor;\n    this.container = null;\n    this.buttons = {};\n  }\n\n  /**\n   * Create and attach toolbar to editor\n   */\n  create() {\n    // Create toolbar container\n    this.container = document.createElement('div');\n    this.container.className = 'overtype-toolbar';\n    this.container.setAttribute('role', 'toolbar');\n    this.container.setAttribute('aria-label', 'Text formatting');\n\n    // Define toolbar buttons\n    const buttonConfig = [\n      { name: 'bold', icon: icons.boldIcon, title: 'Bold (Ctrl+B)', action: 'toggleBold' },\n      { name: 'italic', icon: icons.italicIcon, title: 'Italic (Ctrl+I)', action: 'toggleItalic' },\n      { separator: true },\n      { name: 'h1', icon: icons.h1Icon, title: 'Heading 1', action: 'insertH1' },\n      { name: 'h2', icon: icons.h2Icon, title: 'Heading 2', action: 'insertH2' },\n      { name: 'h3', icon: icons.h3Icon, title: 'Heading 3', action: 'insertH3' },\n      { separator: true },\n      { name: 'link', icon: icons.linkIcon, title: 'Insert Link (Ctrl+K)', action: 'insertLink' },\n      { name: 'code', icon: icons.codeIcon, title: 'Code (Ctrl+`)', action: 'toggleCode' },\n      { separator: true },\n      { name: 'quote', icon: icons.quoteIcon, title: 'Quote', action: 'toggleQuote' },\n      { separator: true },\n      { name: 'bulletList', icon: icons.bulletListIcon, title: 'Bullet List', action: 'toggleBulletList' },\n      { name: 'orderedList', icon: icons.orderedListIcon, title: 'Numbered List', action: 'toggleNumberedList' },\n      { name: 'taskList', icon: icons.taskListIcon, title: 'Task List', action: 'toggleTaskList' }\n    ];\n\n    // Create buttons\n    buttonConfig.forEach(config => {\n      if (config.separator) {\n        const separator = document.createElement('div');\n        separator.className = 'overtype-toolbar-separator';\n        separator.setAttribute('role', 'separator');\n        this.container.appendChild(separator);\n      } else {\n        const button = this.createButton(config);\n        this.buttons[config.name] = button;\n        this.container.appendChild(button);\n      }\n    });\n\n    // Insert toolbar into container before editor wrapper\n    const container = this.editor.element.querySelector('.overtype-container');\n    const wrapper = this.editor.element.querySelector('.overtype-wrapper');\n    if (container && wrapper) {\n      container.insertBefore(this.container, wrapper);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Create individual toolbar button\n   */\n  createButton(config) {\n    const button = document.createElement('button');\n    button.className = 'overtype-toolbar-button';\n    button.type = 'button';\n    button.title = config.title;\n    button.setAttribute('aria-label', config.title);\n    button.setAttribute('data-action', config.action);\n    button.innerHTML = config.icon;\n\n    // Add click handler\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.handleAction(config.action);\n    });\n\n    return button;\n  }\n\n  /**\n   * Handle toolbar button actions\n   */\n  async handleAction(action) {\n    const textarea = this.editor.textarea;\n    if (!textarea) return;\n\n    // Focus textarea\n    textarea.focus();\n\n    try {\n      \n      switch (action) {\n        case 'toggleBold':\n          markdownActions.toggleBold(textarea);\n          break;\n        case 'toggleItalic':\n          markdownActions.toggleItalic(textarea);\n          break;\n        case 'insertH1':\n          markdownActions.toggleH1(textarea);\n          break;\n        case 'insertH2':\n          markdownActions.toggleH2(textarea);\n          break;\n        case 'insertH3':\n          markdownActions.toggleH3(textarea);\n          break;\n        case 'insertLink':\n          markdownActions.insertLink(textarea);\n          break;\n        case 'toggleCode':\n          markdownActions.toggleCode(textarea);\n          break;\n        case 'toggleBulletList':\n          markdownActions.toggleBulletList(textarea);\n          break;\n        case 'toggleNumberedList':\n          markdownActions.toggleNumberedList(textarea);\n          break;\n        case 'toggleQuote':\n          markdownActions.toggleQuote(textarea);\n          break;\n        case 'toggleTaskList':\n          markdownActions.toggleTaskList(textarea);\n          break;\n      }\n\n      // Trigger input event to update preview\n      textarea.dispatchEvent(new Event('input', { bubbles: true }));\n    } catch (error) {\n      console.error('Error loading markdown-actions:', error);\n    }\n  }\n\n  /**\n   * Update toolbar button states based on current selection\n   */\n  async updateButtonStates() {\n    const textarea = this.editor.textarea;\n    if (!textarea) return;\n\n    try {\n      const activeFormats = markdownActions.getActiveFormats(textarea);\n\n      // Update button states\n      Object.entries(this.buttons).forEach(([name, button]) => {\n        let isActive = false;\n        \n        switch (name) {\n          case 'bold':\n            isActive = activeFormats.includes('bold');\n            break;\n          case 'italic':\n            isActive = activeFormats.includes('italic');\n            break;\n          case 'code':\n            // Disabled: code detection is unreliable in code blocks\n            // isActive = activeFormats.includes('code');\n            isActive = false;\n            break;\n          case 'bulletList':\n            isActive = activeFormats.includes('bullet-list');\n            break;\n          case 'orderedList':\n            isActive = activeFormats.includes('numbered-list');\n            break;\n          case 'quote':\n            isActive = activeFormats.includes('quote');\n            break;\n          case 'taskList':\n            isActive = activeFormats.includes('task-list');\n            break;\n          case 'h1':\n            isActive = activeFormats.includes('header');\n            break;\n          case 'h2':\n            isActive = activeFormats.includes('header-2');\n            break;\n          case 'h3':\n            isActive = activeFormats.includes('header-3');\n            break;\n        }\n\n        button.classList.toggle('active', isActive);\n        button.setAttribute('aria-pressed', isActive.toString());\n      });\n    } catch (error) {\n      // Silently fail if markdown-actions not available\n    }\n  }\n\n  /**\n   * Destroy toolbar\n   */\n  destroy() {\n    if (this.container) {\n      this.container.remove();\n      this.container = null;\n      this.buttons = {};\n    }\n  }\n}", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "/**\n * Link Tooltip - Gmail/Google Docs style link preview\n * Shows a clickable tooltip when cursor is within a link\n */\n\nimport { computePosition, flip, shift, offset } from '@floating-ui/dom';\n\nexport class LinkTooltip {\n  constructor(editor) {\n    this.editor = editor;\n    this.tooltip = null;\n    this.currentLink = null;\n    this.hideTimeout = null;\n    this.isMouseInTooltip = false;\n    this.isMouseInLink = false;\n    \n    this.init();\n  }\n  \n  init() {\n    // Create tooltip element\n    this.createTooltip();\n    \n    // Listen for cursor position changes\n    this.editor.textarea.addEventListener('selectionchange', () => this.checkCursorPosition());\n    this.editor.textarea.addEventListener('input', () => this.checkCursorPosition());\n    this.editor.textarea.addEventListener('keyup', (e) => {\n      // Arrow keys might move cursor\n      if (e.key.includes('Arrow')) {\n        this.checkCursorPosition();\n      }\n    });\n    \n    // Hide tooltip when scrolling\n    this.editor.textarea.addEventListener('scroll', () => this.hide());\n    \n    // Mouse events for tooltip persistence\n    this.tooltip.addEventListener('mouseenter', () => {\n      this.isMouseInTooltip = true;\n      this.cancelHide();\n    });\n    \n    this.tooltip.addEventListener('mouseleave', () => {\n      this.isMouseInTooltip = false;\n      this.scheduleHide();\n    });\n  }\n  \n  createTooltip() {\n    this.tooltip = document.createElement('div');\n    this.tooltip.className = 'overtype-link-tooltip';\n    this.tooltip.style.cssText = `\n      position: absolute;\n      background: #333;\n      color: white;\n      padding: 6px 10px;\n      border-radius: 16px;\n      font-size: 12px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n      display: none;\n      z-index: 10000;\n      cursor: pointer;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      max-width: 300px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      transition: opacity 0.2s;\n      opacity: 0;\n    `;\n    \n    // Add link icon and text container\n    this.tooltip.innerHTML = `\n      <span style=\"display: flex; align-items: center; gap: 6px;\">\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"flex-shrink: 0;\">\n          <path d=\"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\"></path>\n          <path d=\"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\"></path>\n        </svg>\n        <span class=\"overtype-link-tooltip-url\"></span>\n      </span>\n    `;\n    \n    // Click handler to open link\n    this.tooltip.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (this.currentLink) {\n        window.open(this.currentLink.url, '_blank');\n        this.hide();\n      }\n    });\n    \n    // Append to document body for proper positioning\n    document.body.appendChild(this.tooltip);\n  }\n  \n  checkCursorPosition() {\n    const cursorPos = this.editor.textarea.selectionStart;\n    const text = this.editor.textarea.value;\n    \n    // Find if cursor is within a markdown link\n    const link = this.findLinkAtPosition(text, cursorPos);\n    \n    if (link) {\n      this.isMouseInLink = true;\n      if (!this.currentLink || \n          this.currentLink.start !== link.start || \n          this.currentLink.url !== link.url) {\n        // New link or different link\n        this.show(link);\n      }\n    } else {\n      // Not in a link\n      this.isMouseInLink = false;\n      this.scheduleHide();\n    }\n  }\n  \n  findLinkAtPosition(text, position) {\n    // Regex to find markdown links: [text](url)\n    const linkRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n    let match;\n    \n    while ((match = linkRegex.exec(text)) !== null) {\n      const start = match.index;\n      const end = match.index + match[0].length;\n      \n      if (position >= start && position <= end) {\n        return {\n          start: start,\n          end: end,\n          text: match[1],\n          url: match[2],\n          fullMatch: match[0]\n        };\n      }\n    }\n    \n    return null;\n  }\n  \n  async show(link) {\n    this.currentLink = link;\n    this.cancelHide();\n    \n    // Update tooltip content\n    const urlSpan = this.tooltip.querySelector('.overtype-link-tooltip-url');\n    urlSpan.textContent = link.url;\n    \n    // Get the position of the link in the preview\n    const linkElement = this.findLinkElementInPreview(link);\n    \n    if (linkElement) {\n      // Use the link element as reference\n      await this.positionTooltip(linkElement);\n    } else {\n      // Fallback: position based on cursor\n      await this.positionTooltipAtCursor(link);\n    }\n    \n    // Show tooltip with animation\n    this.tooltip.style.display = 'block';\n    // Force reflow\n    this.tooltip.offsetHeight;\n    this.tooltip.style.opacity = '1';\n  }\n  \n  findLinkElementInPreview(link) {\n    // Find the corresponding link element in the preview\n    const links = this.editor.preview.querySelectorAll('a');\n    \n    for (const linkEl of links) {\n      // Check if this link contains our URL\n      const urlSpans = linkEl.querySelectorAll('.syntax-marker');\n      for (const span of urlSpans) {\n        if (span.textContent === link.url) {\n          return linkEl;\n        }\n      }\n    }\n    \n    return null;\n  }\n  \n  async positionTooltip(referenceEl) {\n    const { x, y } = await computePosition(referenceEl, this.tooltip, {\n      placement: 'bottom',\n      middleware: [\n        offset(6),\n        flip(),\n        shift({ padding: 10 })\n      ]\n    });\n    \n    Object.assign(this.tooltip.style, {\n      left: `${x}px`,\n      top: `${y}px`\n    });\n  }\n  \n  async positionTooltipAtCursor(link) {\n    // Get cursor position in the textarea\n    const textarea = this.editor.textarea;\n    \n    // Create a temporary element to measure text position\n    const measurer = document.createElement('div');\n    measurer.style.cssText = window.getComputedStyle(textarea).cssText;\n    measurer.style.position = 'absolute';\n    measurer.style.visibility = 'hidden';\n    measurer.style.whiteSpace = 'pre-wrap';\n    measurer.style.wordWrap = 'break-word';\n    \n    // Get text up to cursor\n    const textBeforeCursor = textarea.value.substring(0, link.start + link.fullMatch.length / 2);\n    measurer.textContent = textBeforeCursor;\n    \n    document.body.appendChild(measurer);\n    const textHeight = measurer.offsetHeight;\n    document.body.removeChild(measurer);\n    \n    // Get textarea position\n    const rect = textarea.getBoundingClientRect();\n    \n    // Estimate position (this is approximate)\n    const x = rect.left + rect.width / 2;\n    const y = rect.top + Math.min(textHeight, rect.height - 50);\n    \n    Object.assign(this.tooltip.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n      transform: 'translateX(-50%)'\n    });\n  }\n  \n  hide() {\n    this.tooltip.style.opacity = '0';\n    setTimeout(() => {\n      if (this.tooltip.style.opacity === '0') {\n        this.tooltip.style.display = 'none';\n        this.currentLink = null;\n      }\n    }, 200);\n  }\n  \n  scheduleHide() {\n    this.cancelHide();\n    this.hideTimeout = setTimeout(() => {\n      if (!this.isMouseInTooltip && !this.isMouseInLink) {\n        this.hide();\n      }\n    }, 300);\n  }\n  \n  cancelHide() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n  }\n  \n  destroy() {\n    this.cancelHide();\n    if (this.tooltip && this.tooltip.parentNode) {\n      this.tooltip.parentNode.removeChild(this.tooltip);\n    }\n    this.tooltip = null;\n    this.currentLink = null;\n  }\n}"],
  "mappings": "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",
  "names": ["debugMode", "getActiveFormats", "platform", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "offset", "shift", "flip", "computePosition", "computePosition", "offset", "flip", "shift"]
}
